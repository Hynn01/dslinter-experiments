{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"library(tidyverse)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(tm)\nlibrary(wordcloud)\nlibrary(wordcloud2)\n\narticles <- read_csv(\"../input/covid19-vaccine-articles/COVID-19_Vaccine.csv\")","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","execution":{"iopub.status.busy":"2022-04-28T05:30:38.863635Z","iopub.execute_input":"2022-04-28T05:30:38.898638Z","iopub.status.idle":"2022-04-28T05:30:39.004967Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 1: Creating a Corpus\n\ntext <- articles$ArticleText\ntext_docs <- Corpus(VectorSource(text))\n\ntitle <- articles$ArticleTitle\ntitle_docs <- Corpus(VectorSource(title))","metadata":{"execution":{"iopub.status.busy":"2022-04-28T05:31:24.687431Z","iopub.execute_input":"2022-04-28T05:31:24.689618Z","iopub.status.idle":"2022-04-28T05:31:24.724868Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 2: Cleaning text data\n\ntext_docs <- text_docs %>%\n  tm_map(removeNumbers) %>%\n  tm_map(removePunctuation) %>%\n  tm_map(stripWhitespace)\ntext_docs <- tm_map(text_docs, content_transformer(tolower))\ntext_docs <- tm_map(text_docs, removeWords, stopwords(\"english\"))\n\ntitle_docs <- title_docs %>%\n  tm_map(removeNumbers) %>%\n  tm_map(removePunctuation) %>%\n  tm_map(stripWhitespace)\ntitle_docs <- tm_map(title_docs, content_transformer(tolower))\ntitle_docs <- tm_map(title_docs, removeWords, stopwords(\"english\"))","metadata":{"execution":{"iopub.status.busy":"2022-04-28T05:32:12.253837Z","iopub.execute_input":"2022-04-28T05:32:12.255871Z","iopub.status.idle":"2022-04-28T05:32:12.360694Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 3: Create a document-term-matrix\n\ndtm1 <- TermDocumentMatrix(text_docs) \nmatrix1 <- as.matrix(dtm1) \nwords1 <- sort(rowSums(matrix1),decreasing=TRUE) \ndf1 <- data.frame(word = names(words1),freq=words1)\n\ndtm2 <- TermDocumentMatrix(title_docs) \nmatrix2 <- as.matrix(dtm2) \nwords2 <- sort(rowSums(matrix2),decreasing=TRUE) \ndf2 <- data.frame(word = names(words2),freq=words2)","metadata":{"execution":{"iopub.status.busy":"2022-04-28T05:33:09.425836Z","iopub.execute_input":"2022-04-28T05:33:09.427834Z","iopub.status.idle":"2022-04-28T05:33:09.513246Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 4: Generate word cloud\n\nset.seed(420) # for reproducibility \nwordcloud(words = df1$word, freq = df1$freq, min.freq = 1,\n          max.words=200, random.order=FALSE, rot.per=0.35,\n          colors=brewer.pal(8, \"Dark2\"))\n\nset.seed(420) # for reproducibility \nwordcloud(words = df2$word, freq = df2$freq, min.freq = 1,\n          max.words=200, random.order=FALSE, rot.per=0.35,\n          colors=brewer.pal(8, \"Dark2\"))","metadata":{"execution":{"iopub.status.busy":"2022-04-28T05:33:38.609376Z","iopub.execute_input":"2022-04-28T05:33:38.611418Z","iopub.status.idle":"2022-04-28T05:33:39.872888Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wordcloud2(data=df1, size = 0.7, shape = 'pentagon')","metadata":{"execution":{"iopub.status.busy":"2022-04-28T05:35:34.3388Z","iopub.execute_input":"2022-04-28T05:35:34.340832Z","iopub.status.idle":"2022-04-28T05:35:34.427673Z"},"trusted":true},"execution_count":null,"outputs":[]}]}