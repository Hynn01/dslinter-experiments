{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"This notebook contains the cleaning process for the data set \"cartoons.csv\". At present there are 220 rows of data.\nOriginally there were some wrong data with the released dates. The main problem was that there were 45 NULL values\nin the column of \"end_date\". These mistakes have been corrected here. I have attached the cleaned data set in \nan another notebook.","metadata":{}},{"cell_type":"code","source":"library(tidyverse) # metapackage of all tidyverse packages\n\n","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#load data set\ncartoons <- read_csv(\"../input/cartoons/cartoons.csv\")","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:43:21.571434Z","iopub.execute_input":"2022-05-05T17:43:21.573423Z","iopub.status.idle":"2022-05-05T17:43:21.972761Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"head(cartoons)","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:43:32.440967Z","iopub.execute_input":"2022-05-05T17:43:32.44291Z","iopub.status.idle":"2022-05-05T17:43:32.479407Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# there are 5 variables. All are double precision floats except that the genre is\n# character type.\nglimpse(cartoons)\nls(cartoons)","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:44:00.377952Z","iopub.execute_input":"2022-05-05T17:44:00.379814Z","iopub.status.idle":"2022-05-05T17:44:00.419844Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"###DATA CLEANNNING BEGINS...\n# check duplicates: zero duplicates\nnrow(cartoons) - nrow(distinct(cartoons))","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:44:29.618308Z","iopub.execute_input":"2022-05-05T17:44:29.620265Z","iopub.status.idle":"2022-05-05T17:44:29.645896Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check for NULLs. There are 45 nulls in the data set\n# the percentage of null value is 3.4%.If we delete all 45 records containing \n#NULL, that is a big data loss. See if we can fix this problem.\nsum(is.na(cartoons))\nmean(is.na(cartoons))","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:45:23.909792Z","iopub.execute_input":"2022-05-05T17:45:23.912021Z","iopub.status.idle":"2022-05-05T17:45:23.955779Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check in more details\nsum(is.na(cartoons$cartoon_names))\nsum(is.na(cartoons$release_date))\nsum(is.na(cartoons$imdb_score))\nsum(is.na(cartoons$genre))","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:45:57.219383Z","iopub.execute_input":"2022-05-05T17:45:57.221361Z","iopub.status.idle":"2022-05-05T17:45:57.258504Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# so all the NULL values are in the end_date variables. For now let's just keep\n#them the way it is. Will be back here later...\nsum(is.na(cartoons$end_date))\n# find out where the NULLs are: row number\nwhich(is.na(cartoons$end_date))","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:46:23.115534Z","iopub.execute_input":"2022-05-05T17:46:23.117479Z","iopub.status.idle":"2022-05-05T17:46:23.142363Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# sort the data\n# the lowest score is 3.6, the highest is 8.6\nmax(cartoons$imdb_score)\nmin(cartoons$imdb_score)\ncartoons[order(-cartoons$imdb_score),]","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:47:35.365307Z","iopub.execute_input":"2022-05-05T17:47:35.36734Z","iopub.status.idle":"2022-05-05T17:47:35.475771Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# the last date for end_date is 2022, the first date for end_date is 1958\ncartoons[order(cartoons$end_date),]\n","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:48:20.579594Z","iopub.execute_input":"2022-05-05T17:48:20.581665Z","iopub.status.idle":"2022-05-05T17:48:20.679805Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Darkwing Duck: release _date is 1991, not 1001\n# the last date of release_date is 2017, the first date of release_date is 1940\ncartoons[order(cartoons$release_date),]\n\n# replace the value 1001 with 1991\nnew_cartoons <- cartoons\nnew_cartoons$release_date[new_cartoons$release_date == 1001] <- 1991\n\n#check again to make sure the change has been made.\nnew_cartoons[order(new_cartoons$release_date),]\nnrow(new_cartoons)","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:49:37.271877Z","iopub.execute_input":"2022-05-05T17:49:37.27395Z","iopub.status.idle":"2022-05-05T17:49:37.462848Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# try to fix the NULL data points. These are all the rows with NULL values:\n# 11  13  14  18  19  23  25  41  68  75  80  84  85  86  90  94  99 106 110\n# 111 123 125 133 136 141 143 149 164 165 166 168 174 176 178 200 204 205 206\n# 209 214 215 216 219 220 221\n#row 11 : The Sylvester & Tweety Show ends in 1976\n#row 13 : The Daffy Duck Show ends in 1982\n#row 14 : The Popeye Show ends in 2003\n#row 18 : The All New Pink Panther Show ends in 1980\n#row 19 : The Pink Panther Laugh and a Half Hour and a Half Show ends in 1977\n#row 23 : The Gary Coleman Show ends in 1983\n#row 25 : Tom and Jerry runs from 1940 to 1967. Change both the release date and\n#end date\n#row 41 : The Scooby and Scrappy-Doo Puppy Hour ends in 1982\n#row 68 : Word World ends in 2011\n#row 75 : PAW Patrol still present in 2022\n#row 80 : Cyberchase still present in 2022\n#row 84 : Wild Kratts still present in 2022\n#row 85 : Odd Squad still present in 2022\n#row 86 : Between the Lions: release date is 2000, ends in 2010\n#row 90 : Daniel Tiger's Neighboor still present in 2022\n#row 94 : Pocoyo ends in 2008\n#row 99 : Peppa Pig still presents in 2022\n#row 106: Maggie and the Ferocious Beast 2000-2002\n#row 110: Jack's Big Music Show ends at 2007\n#row 111 : The Upside Down Show ends at 2006\n#row 123 : Batman: Abyss ends at 2013\n#row 125 : Pjmasks still present in 2022\n#row 133 : Zoom 1999-2005\n#row 136 : Curious George 2006-2015\n#row 141 : Sesame Street presents in 2022\n#row 143 : Make Way for Noddy 2002-2015\n#row 149 : Noddy in Toyland 2009-2009\n#row 164 :Trumpton 1967-1967\n#row 165 : Camberwick Green 1966 - 1966\n#row 166 : Chigley 1969-1969\n#row 168 : Jojo's Circus 2003-2007\n#row 174 : Jungle Junction 2009-2012\n#row 176 : VeggieTales 1993-2015\n#row 178 : The Octonauts 2010-2021\n#row 200 : Tangled: Before Ever After 2017\n#row 204 : VeggieTales: Madame Blueberry 1998\n#row 205 : Go Jetters 2015-2020\n#row 206 : The Wiggles 1998-2011\n#row 209 : Marsupilami 1993\n#row 214 : Kate and Mim-Mim 2014-2018\n#row 215 : Noddy, Toyland Detective 2016-2020\n#row 216 : Floogals 2016-2020\n#row 219 : Dora and Friends: Into the City! 2014 - 2017\n#row 220 : The Ollie & Moon Show still on 2022\n#row 221 :  Whisker Haven Tales with the Palace Pets 2015-2017\nnew_cartoons[11,]$end_date <- 1976\nnew_cartoons[13,]$end_date <- 1982\nnew_cartoons[14,]$end_date <- 2003\nnew_cartoons[18,]$end_date <- 1980\nnew_cartoons[19,]$end_date <- 1977\nnew_cartoons[23,]$end_date <- 1983\nnew_cartoons[25,]$release_date <- 1940\nnew_cartoons[41,]$end_date <- 1982\nnew_cartoons[25,]$end_date <- 1967\nnew_cartoons[68,]$end_date <- 2011\nnew_cartoons[75,]$end_date <- 2022\nnew_cartoons[80,]$end_date <- 2022\nnew_cartoons[84,]$end_date <- 2022\nnew_cartoons[85,]$end_date <- 2022\nnew_cartoons[86,]$release_date <- 2000\nnew_cartoons[86,]$end_date <- 2010\nnew_cartoons[90,]$end_date <- 2022\nnew_cartoons[94,]$end_date <- 2008\nnew_cartoons[99,]$end_date <- 2022\nnew_cartoons[106,]$release_date <- 2000\nnew_cartoons[106,]$end_date <- 2002\nnew_cartoons[110,]$end_date <- 2007\nnew_cartoons[111,]$end_date <- 2006\nnew_cartoons[123,]$end_date <- 2013\nnew_cartoons[125,]$end_date <- 2022\nnew_cartoons[133,]$release_date <- 1999\nnew_cartoons[133,]$end_date <- 2005\nnew_cartoons[136,]$release_date <- 2006\nnew_cartoons[136,]$end_date <- 2015\nnew_cartoons[141,]$end_date <- 2022\nnew_cartoons[143,]$end_date <- 2015\nnew_cartoons[143,]$release_date <- 2002\nnew_cartoons[149,]$end_date <- 2009\nnew_cartoons[164,]$end_date <- 1967\nnew_cartoons[165,]$end_date <- 1966\nnew_cartoons[166,]$end_date <- 1969\nnew_cartoons[168,]$end_date <- 2007\nnew_cartoons[174,]$end_date <- 2012\nnew_cartoons[176,]$end_date <- 2015\nnew_cartoons[178,]$end_date <- 2021\nnew_cartoons[200,]$end_date <- 2017\nnew_cartoons[204,]$end_date <- 1998\nnew_cartoons[205,]$end_date <- 2020\nnew_cartoons[206,]$end_date <- 2011\nnew_cartoons[209,]$end_date <- 1993\nnew_cartoons[214,]$end_date <- 2018\nnew_cartoons[215,]$end_date <- 2020\nnew_cartoons[216,]$end_date <- 2020\nnew_cartoons[219,]$end_date <- 2017\nnew_cartoons[220,]$end_date <- 2020\nnew_cartoons[221,]$end_date <- 2017\n","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:50:50.803059Z","iopub.execute_input":"2022-05-05T17:50:50.805192Z","iopub.status.idle":"2022-05-05T17:50:50.954526Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# check NULL again. Success!\nsum(is.na(new_cartoons$end_date))\n","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:51:26.889113Z","iopub.execute_input":"2022-05-05T17:51:26.891117Z","iopub.status.idle":"2022-05-05T17:51:26.914336Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"View(new_cartoons)","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:51:48.992048Z","iopub.execute_input":"2022-05-05T17:51:48.99388Z","iopub.status.idle":"2022-05-05T17:51:49.080364Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Last cleaning step: make sure the end_dates are later than the release_dates\n#check the dates, making sure that the end date is later than the release date.\n\nfor(i in 1:nrow(new_cartoons)) {\nif(new_cartoons[i,]$release_date > new_cartoons[i,]$end_date ) \n{ print(\"wrong\")\n}else{\n    print(i)\n  }\n}","metadata":{"execution":{"iopub.status.busy":"2022-05-05T17:53:00.328811Z","iopub.execute_input":"2022-05-05T17:53:00.340306Z","iopub.status.idle":"2022-05-05T17:53:00.420521Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now you have a cleaned data set to work on! Thank you for this data set. ","metadata":{}}]}