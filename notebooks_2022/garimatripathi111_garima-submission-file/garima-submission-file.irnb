{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This R environment comes with many helpful analytics packages installed\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n# For example, here's a helpful package to load\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","execution":{"iopub.status.busy":"2022-05-01T07:31:52.427995Z","iopub.execute_input":"2022-05-01T07:31:52.429977Z","iopub.status.idle":"2022-05-01T07:31:53.33666Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(gplots)\nlibrary(repr)\nlibrary(Metrics)\nlist.files(\"../input\")\ntrain <- read.csv(\"../input/../input/house-price-prediction-of-indore-3gb11/IndoreHP_Train.csv\")\ntest <- read.csv(\"../input/house-price-prediction-of-indore-3gb11/IndoreHP_Test.csv\")\nsample<- read.csv(\"../input/house-price-prediction-of-indore-3gb11/IndoreHP_Sample.csv\")\n# list rows of data that have missing values \nmissing_row <- train[!complete.cases(train),]\nhead(missing_row)\n\nnrow(missing_row)\n\n## show all variable names\nvar_name <- names(train)\nvar_name\n\n#Here, we select these important variables by creating a vector that contains variable names\nselect_var <- c('ID','CRIM','ZN','INDUS',\n                'RIVER_FLG','nitric.oxides.concentration','X.rooms.dwelling','AGE','DIS','RAD',\n                'TAX','PTRATIO','B','LSTAT','MEDV')\n\n# construct subset of train dataset that is used for prediction\nselect_train <- train[,select_var]\nhead(select_train)\n\n\nsummary(select_train)\n\n# Correlation Coefficient matrix\n\ntrain <- train %>%\n\n  rename(noc = nitric.oxides.concentration,rooms = X.rooms.dwelling)\n\n#rename the columns in testing Database\n\ntest <- test %>%\n\n  rename(noc = nitric.oxides.concentration,rooms = X.rooms.dwelling)\n\n\n# lets drop the Indus,RAD and river cols as it doesnt seem significant\n\nmodel1 <- lm(MEDV ~ CRIM + ZN + AGE+TAX+PTRATIO+B+LSTAT+ rooms + noc + DIS , data = train)\n\nsummary(model1)\n\n\n\nmodel2 <- lm(MEDV ~ CRIM + AGE+TAX+PTRATIO+B+LSTAT+ rooms + noc + DIS , data = train)\n\nsummary(model2)\n\n\n# lets drop the age col as well\n\nmodel3 <- lm(MEDV ~ CRIM+TAX+PTRATIO+B+LSTAT+ rooms + noc + DIS , data = train)\n\nsummary(model3)\n# Check the RMSE score of train dataset\n\n# Let us now test our model by predicting on our testing dataset.\n\ntest$predicted.MEDV = predict(model3, test)\n\n# Check the RMSE score of train dataset\n\nrmse(test$predicted.MEDV, predict(model3, test))\n\n\nrmse(test$predicted.MEDV, predict(model2, test))\n\n\nlibrary(forecast)\n#use predict() to make prediction on a new set\npred1 <- predict(model3)\n\n\n\n","metadata":{"execution":{"iopub.status.busy":"2022-05-01T07:31:53.339447Z","iopub.execute_input":"2022-05-01T07:31:53.341171Z","iopub.status.idle":"2022-05-01T07:31:54.595336Z"},"trusted":true},"execution_count":null,"outputs":[]}]}