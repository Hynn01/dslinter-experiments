{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Tabular Playground Series - May 2022\n\nThis is my first real competion on Kaggle! :-)\n\n## Importing Data and Loading Packages","metadata":{}},{"cell_type":"code","source":"# Loading packages\nlibrary(skimr)\nlibrary(modelr)\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(yardstick)\nlibrary(patchwork)\nlibrary(scales)\n\n# Controling plot size\nfig <- function(width, height = width * 0.618) {\n     options(repr.plot.width = width, repr.plot.height = height, repr.plot.res = 120, warn=-1, dplyr.summarise.inform = FALSE)\n}\n\n# Importing Data\ndata <- read_csv(\"../input/tabular-playground-series-may-2022/train.csv\")","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","execution":{"iopub.status.busy":"2022-05-04T23:22:55.119338Z","iopub.execute_input":"2022-05-04T23:22:55.12153Z","iopub.status.idle":"2022-05-04T23:23:06.014727Z"},"_kg_hide-input":true,"_kg_hide-output":true,"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Exploration Data Analysis and Data Wrangling\n\nBased on information about data provide by the competion page, I will take the following steps:\n\n- Columns f_0 to f_26 and f_28: without any transformation;\n\n- Column f_27: make more exploration; and,\n\n- Columns f_29 and f_30: parse as factor.\n\nLet's begin seeing how many characters each row of f_27 have!","metadata":{}},{"cell_type":"code","source":"data %>%\n    select(f_27) %>%\n    mutate(length = str_length(f_27)) %>%\n    count(length)    ","metadata":{"execution":{"iopub.status.busy":"2022-05-04T23:40:49.590272Z","iopub.execute_input":"2022-05-04T23:40:49.592113Z","iopub.status.idle":"2022-05-04T23:40:49.754861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Well, let's split the rows and find some pattern.","metadata":{}},{"cell_type":"code","source":"data_f27 <- data %>%\n    transmute(f_27, f_27_ = f_27) %>%\n    separate(f_27_, into = c(NA, \"x1\", \"x2\", \"x3\", \"x4\", \"x5\", \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"), sep = \"\") %>%\n    pivot_longer(x1:x10, names_to = \"position\", values_to = \"character\") %>%\n    arrange(position, character) %>%\n    mutate(across(position:character, as_factor))\n\ndata_f27 %>%\n    count(position, character) %>%\n    group_by(position) %>%\n    mutate(n_perc = n / sum(n)) %>%\n    ungroup() %>%\n    ggplot(aes(x = position, y = character, fill = n_perc)) +\n    geom_tile()","metadata":{"execution":{"iopub.status.busy":"2022-05-05T00:24:29.347865Z","iopub.execute_input":"2022-05-05T00:24:29.350201Z","iopub.status.idle":"2022-05-05T00:24:30.72689Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The heatmap shows us the distribuition between the positions and letter. Some positions shows only 2 characters (x1, x3, and x6). Only x8 shows all letter A to T. Let's split f_26 into 10 new columns and see if it is correlated with the target.","metadata":{}},{"cell_type":"code","source":"data_clean <- data %>%\n    separate(f_27, into = c(NA, \"x1\", \"x2\", \"x3\", \"x4\", \"x5\", \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"), sep = \"\") %>%\n    mutate(\n        across(x1:x10, ~ factor(.x, levels = unique(data_f27$character))),\n        across(f_29:f_30, as_factor)\n    )","metadata":{"_kg_hide-input":true,"_kg_hide-output":true,"execution":{"iopub.status.busy":"2022-05-05T00:40:18.180318Z","iopub.execute_input":"2022-05-05T00:40:18.182074Z","iopub.status.idle":"2022-05-05T00:40:42.361772Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Now it is time split our data to train and to validate our model!","metadata":{}},{"cell_type":"code","source":"set.seed(7)\n\ndata_train <- data_clean %>%\n    sample_frac(size = 0.6)\n\ndata_validate <- data_clean %>%\n    anti_join(data_train, by = \"id\")\n\ndata_train <- data_train %>%\n    select(-id)\n\ndata_validate <- data_validate %>%\n    select(-id)","metadata":{"execution":{"iopub.status.busy":"2022-05-05T00:49:37.357722Z","iopub.execute_input":"2022-05-05T00:49:37.359359Z","iopub.status.idle":"2022-05-05T00:49:37.938699Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Let's try one first logistic regression model with all variables!","metadata":{}},{"cell_type":"code","source":"glm.fit <- glm(target ~ ., data = data_train, family = \"binomial\")\n\nsummary(glm.fit)","metadata":{"execution":{"iopub.status.busy":"2022-05-05T00:50:21.634793Z","iopub.execute_input":"2022-05-05T00:50:21.636435Z","iopub.status.idle":"2022-05-05T00:51:20.650454Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I will return tomorrow to evaluate our first model!","metadata":{}}]}