{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"#  **Google Data Analytics Project BikeShare Case Study**\n## **Author: Ibrahim Raji**\n\n\n## INTRODUCTION\n\nIn this Fictional Scenario, I am a junior data analyst working in the marketing analyst team at Cyclistic, a bike-share company in Chicago. The director of marketing believes the company’s future success depends on maximizing the number of annual memberships. Therefore, my team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, my team will design a new marketing strategy to convert casual riders into annual members. But first, Cyclistic executives must approve our recommendations, so they must be backed up with compelling data insights and professional data visualizations.\n\n#### About Cyclistic\nCyclistic: A bike-share program that features more than 5,800 bicycles and 600 docking stations. Cyclistic sets itselfapart by also offering reclining bikes, hand tricycles, and cargo bikes, making bike-share more inclusive to people withdisabilities and riders who can’t use a standard two-wheeled bike. The majority of riders opt for traditional bikes; about 8% of riders use the assistive options. Cyclistic users are more likely to ride for leisure, but about 30% use them to\ncommute to work each day.\n\n#### StakeHolders\n● Lily Moreno: The director of marketing and my manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\n\n● Cyclistic marketing analytics team: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. You joined this team six months ago and have been busylearning about Cyclistic’s mission and business goals — as well as how you, as a junior data analyst, can help Cyclistic\nachieve them.\n\n● Cyclistic executive team: The notoriously detail-oriented executive team will decide whether to approve therecommended marketing program.\n\n\n#### About the company\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime.\n\nThese project is divied into six ditinct phases where I tackle the problem logically. They are;\n* Ask\n* Prepare\n* Process\n* Analyze\n* Share and \n* Act","metadata":{}},{"cell_type":"markdown","source":"# **1. ASK**\n\nIn this Phase, I need to understand the business objective and the task at hand.\nThe business objective here is to provide answers to the following question.\n\nHow do annual members and casual riders use Cyclistic bikes differently?\n\n\nMy Manager, Moreno assigned me to answer the question How do annual members and casual riders use Cyclistic bikes differently?\n\nI also need to know the key Stakeholders and they are:\n\n1. Moreno: My manger\n\n2. Cyclistic executive team and\n\n3. Cyclistic marketing analytics team\n","metadata":{}},{"cell_type":"markdown","source":"# **2. PREPARE**\n\nIn this phase, I download the [dataset](http://https://divvy-tripdata.s3.amazonaws.com/index.html) The last twelve month is my focus in this case April 2021 - March 2022\n\nThe dataset is well organized, the files are saved monthly. The  dataset is Reliable,Original,Current,Comprehensive and cited which make it fit for my analysis.\n","metadata":{}},{"cell_type":"markdown","source":"### Setting Up my Enviroment\n\nI will Install and load all the packages needed to complete this project\n1. tidyverse for data import and wrangling\n2. Janitor for Cleaning\n3. lubridate for date functions\n4. ggplot for visualization\n","metadata":{}},{"cell_type":"code","source":"#install packages\ninstall.packages(\"tidyverse\")\ninstall.packages(\"janitor\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"lubridate\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:37:06.16165Z","iopub.execute_input":"2022-05-07T15:37:06.210417Z","iopub.status.idle":"2022-05-07T15:38:39.847453Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Load Packages\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(janitor)\nlibrary(ggplot2)\nlibrary(lubridate)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:38:39.851617Z","iopub.execute_input":"2022-05-07T15:38:39.853687Z","iopub.status.idle":"2022-05-07T15:38:40.8233Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Import the Dataset","metadata":{}},{"cell_type":"code","source":"april_2021 <- read_csv('../input/cyclistic-dataset-april-2021-march-2022/202104-divvy-tripdata.csv')\nmay_2021 <- read_csv('../input/cyclistic-dataset-april-2021-march-2022/202105-divvy-tripdata.csv')\njune_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202106-divvy-tripdata.csv')\njuly_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202107-divvy-tripdata.csv')\naugust_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202108-divvy-tripdata.csv')\nseptember_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202109-divvy-tripdata.csv')\noctober_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202110-divvy-tripdata.csv')\nnovember_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202111-divvy-tripdata.csv')\ndecember_2021 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202112-divvy-tripdata.csv')\njanuary_2022 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202201-divvy-tripdata.csv')\nfebruary_2022 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202202-divvy-tripdata.csv')\nmarch_2022 <- read.csv('../input/cyclistic-dataset-april-2021-march-2022/202203-divvy-tripdata.csv')","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:38:40.827174Z","iopub.execute_input":"2022-05-07T15:38:40.829709Z","iopub.status.idle":"2022-05-07T15:40:54.187714Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Inpect DataFrame to check for incositencies ","metadata":{}},{"cell_type":"code","source":"str(april_2021)\nstr(may_2021)\nstr(june_2021)\nstr(july_2021)\nstr(august_2021)\nstr(september_2021)\nstr(october_2021)\nstr(november_2021)\nstr(december_2021)\nstr(january_2022)\nstr(february_2022)\nstr(march_2022)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:40:54.192286Z","iopub.execute_input":"2022-05-07T15:40:54.194939Z","iopub.status.idle":"2022-05-07T15:40:54.754672Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### All the data dataframe follows the same structure except the first two dataframes *( april and may 2021)* where started_at and ended_at columns is saved as *POSIXct* datatype\n\nNow, I convert started_at and ended_at in April and May 2021 dataframes to make all the dataframes the same structure\n\nTo do this, I use the mutate function\n\n","metadata":{}},{"cell_type":"code","source":"april_2021<- mutate(april_2021, started_at = as.character(started_at),\n                    ended_at = as.character(ended_at)) \nmay_2021<-  mutate(may_2021, started_at = as.character(started_at),\n                   ended_at = as.character(ended_at)) \n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:40:54.758697Z","iopub.execute_input":"2022-05-07T15:40:54.761178Z","iopub.status.idle":"2022-05-07T15:41:13.890388Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Now, Bind all the data frame to a single file\n\nI used the bind_row funtion to achieve that","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare <- bind_rows(april_2021,may_2021,june_2021,july_2021,august_2021,\n                            september_2021, october_2021, november_2021, december_2021,\n                            january_2022, february_2022, march_2022)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:41:13.894314Z","iopub.execute_input":"2022-05-07T15:41:13.896247Z","iopub.status.idle":"2022-05-07T15:41:29.366489Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Let see our combined  data Frame\n\n* functions like\n* str,\n* colnames,\n* head,\n* skim_without_charts\n* View and \n* glimpse \ncan be used to inspect our DataFrame ","metadata":{"execution":{"iopub.status.busy":"2022-05-07T10:20:59.173713Z","iopub.execute_input":"2022-05-07T10:20:59.175083Z","iopub.status.idle":"2022-05-07T10:20:59.194481Z"}}},{"cell_type":"code","source":"head(cyclistic_bikeshare)\nstr(cyclistic_bikeshare)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:41:29.371311Z","iopub.execute_input":"2022-05-07T15:41:29.373615Z","iopub.status.idle":"2022-05-07T15:41:29.468358Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We have over 5 million Rows in our new Dataframe","metadata":{}},{"cell_type":"markdown","source":"# **3. PROCESS**\n\n#### This is where the Data is thoroghly inpected and cleaned \n\n### Check the Dataframe\n","metadata":{}},{"cell_type":"code","source":"glimpse(cyclistic_bikeshare)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:41:29.471603Z","iopub.execute_input":"2022-05-07T15:41:29.473581Z","iopub.status.idle":"2022-05-07T15:41:29.512248Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"nrow(cyclistic_bikeshare)\nsummary(cyclistic_bikeshare)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:41:29.516161Z","iopub.execute_input":"2022-05-07T15:41:29.518326Z","iopub.status.idle":"2022-05-07T15:41:42.178477Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Check for Unique values in rideable_type and member_casual","metadata":{}},{"cell_type":"code","source":"unique(cyclistic_bikeshare$rideable_type)\nunique(cyclistic_bikeshare$member_casual)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:41:42.183007Z","iopub.execute_input":"2022-05-07T15:41:42.185135Z","iopub.status.idle":"2022-05-07T15:41:42.538646Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Good, no wrong input in the examine fields ","metadata":{}},{"cell_type":"markdown","source":"### After the inspection its evident that I need to fix a few problems:\n\n1. The data can only be aggregated at the ride-level, that is too basic. I want to add some additional columns of data -- such as day, month, year -- that provide additional opportunities to aggregate the data.\n2. We will want to add a calculated field for length of ride ie trip duration\n3. Delete rows with negative values\n ","metadata":{}},{"cell_type":"markdown","source":"### Adding Additional Columns","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare$date <- as.Date(cyclistic_bikeshare$started_at) #The default format is yyyy-mm-dd\ncyclistic_bikeshare$month <- format(as.Date(cyclistic_bikeshare$date), \"%m\")\ncyclistic_bikeshare$day <- format(as.Date(cyclistic_bikeshare$date), \"%d\")\ncyclistic_bikeshare$year <- format(as.Date(cyclistic_bikeshare$date), \"%Y\")\ncyclistic_bikeshare$day_of_week <- format(as.Date(cyclistic_bikeshare$date), \"%A\")\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:41:42.542252Z","iopub.execute_input":"2022-05-07T15:41:42.544075Z","iopub.status.idle":"2022-05-07T15:42:15.409214Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Adding the trip duration column in \"seconds\"","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare$trip_duration <- difftime(cyclistic_bikeshare$ended_at,cyclistic_bikeshare$started_at)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:42:15.412595Z","iopub.execute_input":"2022-05-07T15:42:15.414468Z","iopub.status.idle":"2022-05-07T15:42:54.556202Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### View the new table","metadata":{}},{"cell_type":"code","source":"View(cyclistic_bikeshare)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:42:54.5593Z","iopub.execute_input":"2022-05-07T15:42:54.56111Z","iopub.status.idle":"2022-05-07T15:42:54.861471Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Convert trip_duration ccolumn to numeric so we can run calculations on it","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare$trip_duration <- as.numeric(as.character(cyclistic_bikeshare$trip_duration))\n#check if the change is successful\nis.numeric(cyclistic_bikeshare$trip_duration)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:42:54.864536Z","iopub.execute_input":"2022-05-07T15:42:54.866321Z","iopub.status.idle":"2022-05-07T15:43:03.969312Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Save copy of the original file before we delete some rows","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:43:03.972346Z","iopub.execute_input":"2022-05-07T15:43:03.974139Z","iopub.status.idle":"2022-05-07T15:43:04.054295Z"}}},{"cell_type":"code","source":"write.csv(cyclistic_bikeshare, \"cyclistic_bikeshare.csv\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:44:45.093877Z","iopub.execute_input":"2022-05-07T15:44:45.095838Z","iopub.status.idle":"2022-05-07T15:47:04.97263Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Check for negative columns and delete all the corresponding rows","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare_new <- cyclistic_bikeshare %>%\n    filter(trip_duration>0)\n\nnrow(cyclistic_bikeshare_new)\n\nglimpse(cyclistic_bikeshare_new)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:47:04.97801Z","iopub.execute_input":"2022-05-07T15:47:04.980403Z","iopub.status.idle":"2022-05-07T15:47:11.110382Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Remove rows with null Values","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare_new <- na.omit(cyclistic_bikeshare_new)\nglimpse(cyclistic_bikeshare_new)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:47:23.087818Z","iopub.execute_input":"2022-05-07T15:47:23.090044Z","iopub.status.idle":"2022-05-07T15:47:44.819266Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Rename some Fields/Columns for easy comprehension\n\n","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare_new <- cyclistic_bikeshare_new %>%\n                                    rename(ride_type = rideable_type,\n                                     user_type = member_casual)\nglimpse(cyclistic_bikeshare_new)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:47:50.414141Z","iopub.execute_input":"2022-05-07T15:47:50.41664Z","iopub.status.idle":"2022-05-07T15:47:50.50265Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Change the month Value to Name of month","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare_new <- cyclistic_bikeshare_new %>% \n                mutate(month = month.name[as.numeric(month)])\nglimpse(cyclistic_bikeshare_new)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:47:58.80355Z","iopub.execute_input":"2022-05-07T15:47:58.805686Z","iopub.status.idle":"2022-05-07T15:48:00.779567Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Final View of The Data Frame Before moving to Analysis","metadata":{}},{"cell_type":"code","source":"unique(cyclistic_bikeshare_new$month)\nView(cyclistic_bikeshare_new)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:48:14.661184Z","iopub.execute_input":"2022-05-07T15:48:14.663658Z","iopub.status.idle":"2022-05-07T15:48:15.125795Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 4. **ANALYSIS**","metadata":{}},{"cell_type":"markdown","source":"### This where I take a deep look into the dataset to discover trends and  pattern and try to answer the business question\n\n#### First I create a Summary table to undestand the trip_duration","metadata":{}},{"cell_type":"code","source":"summary(cyclistic_bikeshare_new$trip_duration) #Values in Seconds","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:48:24.742652Z","iopub.execute_input":"2022-05-07T15:48:24.744992Z","iopub.status.idle":"2022-05-07T15:48:25.036436Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Intersting the longest ride is more than a month by a casual rider using a docked bike","metadata":{"execution":{"iopub.status.busy":"2022-05-07T12:26:01.661328Z","iopub.execute_input":"2022-05-07T12:26:01.663059Z","iopub.status.idle":"2022-05-07T12:26:01.762731Z"}}},{"cell_type":"markdown","source":"### Compare Casual and Member on trip_duration","metadata":{}},{"cell_type":"code","source":"aggregate (cyclistic_bikeshare_new$trip_duration~cyclistic_bikeshare_new$user_type, FUN = min)\naggregate (cyclistic_bikeshare_new$trip_duration~cyclistic_bikeshare_new$user_type, FUN = max)\naggregate (cyclistic_bikeshare_new$trip_duration~cyclistic_bikeshare_new$user_type, FUN = median)\naggregate (cyclistic_bikeshare_new$trip_duration~cyclistic_bikeshare_new$user_type, FUN = mean)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:48:30.545295Z","iopub.execute_input":"2022-05-07T15:48:30.547272Z","iopub.status.idle":"2022-05-07T15:49:01.658298Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Casual riders rides more than the Member riders\n\n### How do bike ","metadata":{}},{"cell_type":"code","source":"aggregate(cyclistic_bikeshare_new$trip_duration ~ cyclistic_bikeshare_new$user_type +\n          cyclistic_bikeshare_new$day_of_week, FUN = mean)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:49:23.191978Z","iopub.execute_input":"2022-05-07T15:49:23.194294Z","iopub.status.idle":"2022-05-07T15:49:36.129994Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The result is not ordered , I use the ordered function to create an ordered list","metadata":{}},{"cell_type":"code","source":"cyclistic_bikeshare_new$day_of_week <- ordered(cyclistic_bikeshare_new$day_of_week, \n        levels=c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))\naggregate(cyclistic_bikeshare_new$trip_duration ~ cyclistic_bikeshare_new$user_type +\n          cyclistic_bikeshare_new$day_of_week, FUN = mean)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T15:54:24.400228Z","iopub.execute_input":"2022-05-07T15:54:24.402903Z","iopub.status.idle":"2022-05-07T15:54:33.200021Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# analyze ridership data by type and weekday\ncyclistic_bikeshare_new %>% \n  mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()\n  group_by(user_type, weekday) %>%  #groups by usertype and weekday\n  summarise(number_of_rides = n()                            #calculates the number of rides and average duration \n  ,average_duration = mean(trip_duration)) %>%         # calculates the average duration\n  arrange(user_type, weekday)    \n\n# analyze ridership data by type and weekday\ncyclistic_bikeshare_new %>%   \n  group_by(user_type, month) %>%  #groups by usertype and month\n  summarise(number_of_rides = n()                            #calculates the number of rides and average duration \n  ,average_duration = mean(trip_duration)) %>%         # calculates the average duration\n  arrange(user_type, month)  %>%","metadata":{"execution":{"iopub.status.busy":"2022-05-07T16:06:27.795895Z","iopub.execute_input":"2022-05-07T16:06:27.798066Z","iopub.status.idle":"2022-05-07T16:06:46.080954Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 5. SHARE\n### This is where I create visualizations to dipict my findings","metadata":{}},{"cell_type":"code","source":"# Let's visualize the number of rides by rider type\ncyclistic_bikeshare_new %>% \n  mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()\n  group_by(user_type, weekday) %>%  #groups by usertype and weekday\n  summarise(number_of_rides = n()                            #calculates the number of rides and average duration \n  ,average_duration = mean(trip_duration)) %>%         # calculates the average duration\n  arrange(user_type, weekday) %>%\n  ggplot(aes(x = weekday, y = number_of_rides, fill = user_type)) +\n  geom_col(position = \"dodge\")\n\n# Let's create a visualization for average duration\ncyclistic_bikeshare_new %>% \n  mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()\n  group_by(user_type, weekday) %>%  #groups by usertype and weekday\n  summarise(number_of_rides = n()                            #calculates the number of rides and average duration \n  ,average_duration = mean(trip_duration)) %>%         # calculates the average duration\n  arrange(user_type, weekday) %>%\n  ggplot(aes(x = weekday, y = average_duration, fill = user_type)) +\n  geom_col(position = \"dodge\")\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T16:15:23.723033Z","iopub.execute_input":"2022-05-07T16:15:23.725095Z","iopub.status.idle":"2022-05-07T16:16:02.411541Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#cyclistic_bikeshare_new %>% \n#group_by(day_of_week)%>% \n#summarize(number_of_rides = n(), trip_duration = trip_duration)%>% \n#ggplot(aes(x = trip_duration, y = number_of_rides, fill = day_of_week))\n#geompoint(position= \"dodge\")'''\n\nggplot(data = cyclistic_bikeshare_new) + geom_bar(mapping \n    = aes(x = trip_duration))","metadata":{"execution":{"iopub.status.busy":"2022-05-07T16:58:32.664916Z","iopub.execute_input":"2022-05-07T16:58:32.666433Z","iopub.status.idle":"2022-05-07T16:58:59.029284Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 6. ACT\n\nThis is where I share my findings with my stake holders and give recomendations accordingly","metadata":{}}]}