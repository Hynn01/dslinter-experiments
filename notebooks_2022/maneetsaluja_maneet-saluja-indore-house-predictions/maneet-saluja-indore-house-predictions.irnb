{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This R environment comes with many helpful analytics packages installed\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n# For example, here's a helpful package to load\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","execution":{"iopub.status.busy":"2022-05-03T12:38:31.535899Z","iopub.execute_input":"2022-05-03T12:38:31.538371Z","iopub.status.idle":"2022-05-03T12:38:33.01467Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Load packages and libraries\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(corrplot)\nlibrary(rpart)\nlibrary(moments)\nlibrary(Metrics)\nlibrary(readxl)\nlibrary(readr)\nlibrary(caret)\nlibrary(plotly)\nlibrary(randomForest)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:44:44.280519Z","iopub.execute_input":"2022-05-03T12:44:44.282184Z","iopub.status.idle":"2022-05-03T12:44:46.944697Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Read the Indore housing dataset - Train\ntrain <- read.csv('/kaggle/input/house-price-prediction-of-indore-3gb11/IndoreHP_Train.csv', header = TRUE)\nhead(train)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:38:55.914685Z","iopub.execute_input":"2022-05-03T12:38:55.945725Z","iopub.status.idle":"2022-05-03T12:38:55.992453Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check the dimensions of the dataset\ndim(train)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:45:04.294432Z","iopub.execute_input":"2022-05-03T12:45:04.296147Z","iopub.status.idle":"2022-05-03T12:45:04.312927Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# View the structure of the dataset\nstr(train)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:45:13.425124Z","iopub.execute_input":"2022-05-03T12:45:13.426726Z","iopub.status.idle":"2022-05-03T12:45:13.455209Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Read the Indore housing dataset - Test\ntest <- read.csv('/kaggle/input/house-price-prediction-of-indore-3gb11/IndoreHP_Test.csv', header = TRUE)\nhead(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:45:24.049406Z","iopub.execute_input":"2022-05-03T12:45:24.051102Z","iopub.status.idle":"2022-05-03T12:45:24.097932Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check the dimensions of the dataset\ndim(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:45:31.808272Z","iopub.execute_input":"2022-05-03T12:45:31.809855Z","iopub.status.idle":"2022-05-03T12:45:31.826106Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# View the structure of the dataset\nstr(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:45:38.152371Z","iopub.execute_input":"2022-05-03T12:45:38.154178Z","iopub.status.idle":"2022-05-03T12:45:38.201658Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Analyze the summary of all the variables of the dataset\nsummary(train)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:46:01.916975Z","iopub.execute_input":"2022-05-03T12:46:01.918714Z","iopub.status.idle":"2022-05-03T12:46:01.942369Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Analyze the summary of all the variables of the dataset\nsummary(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:46:08.849709Z","iopub.execute_input":"2022-05-03T12:46:08.852042Z","iopub.status.idle":"2022-05-03T12:46:08.874997Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking variable names\nnames(train)\nnames(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:46:17.177501Z","iopub.execute_input":"2022-05-03T12:46:17.179242Z","iopub.status.idle":"2022-05-03T12:46:17.205559Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Find the missing values in the dataset\nsum(is.na(train))\nsum(is.na(test))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:46:26.175515Z","iopub.execute_input":"2022-05-03T12:46:26.177325Z","iopub.status.idle":"2022-05-03T12:46:26.200128Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#checking correlation between variables\ncorrplot(cor(train), method = \"number\", type = \"upper\", diag = FALSE)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:46:36.544491Z","iopub.execute_input":"2022-05-03T12:46:36.546246Z","iopub.status.idle":"2022-05-03T12:46:36.885631Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename columns using base R function\nnames(train)[names(train) == 'RIVER_FLG'] <- 'RIVER'\nnames(test)[names(test) == 'RIVER_FLG'] <- 'RIVER'","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:46:50.375814Z","iopub.execute_input":"2022-05-03T12:46:50.377464Z","iopub.status.idle":"2022-05-03T12:46:50.393237Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename Mmultiple columns using dplyr\ntrain <- train %>%\n  rename(NOC = nitric.oxides.concentration,\n         ROOMS = X.rooms.dwelling)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:47:18.992896Z","iopub.execute_input":"2022-05-03T12:47:18.994879Z","iopub.status.idle":"2022-05-03T12:47:19.095401Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename Mmultiple columns using dplyr\ntest <- test %>%\n  rename(NOC = nitric.oxides.concentration,\n         ROOMS = X.rooms.dwelling)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:47:33.977618Z","iopub.execute_input":"2022-05-03T12:47:33.979288Z","iopub.status.idle":"2022-05-03T12:47:33.99584Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check the changes\nhead(train)\nhead(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:47:51.193332Z","iopub.execute_input":"2022-05-03T12:47:51.194972Z","iopub.status.idle":"2022-05-03T12:47:51.24997Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check structure\nstr(train)\nstr(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:51:11.051734Z","iopub.execute_input":"2022-05-03T12:51:11.053449Z","iopub.status.idle":"2022-05-03T12:51:11.095834Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Disable scientific notation for model summary\noptions(scipen=999)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:52:11.422532Z","iopub.execute_input":"2022-05-03T12:52:11.42413Z","iopub.status.idle":"2022-05-03T12:52:11.43694Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"library(Amelia)\n\n# Check for any NA's in the dataframe.\nmissmap(train, col = c('yellow', 'black'), y.at = 1, y.labels = '', legend = TRUE)\n\nmissmap(test, col = c('yellow', 'black'), y.at = 1, y.labels = '', legend = TRUE)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:54:20.760783Z","iopub.execute_input":"2022-05-03T12:54:20.762693Z","iopub.status.idle":"2022-05-03T12:54:21.072687Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Correlation plots are a great way of exploring data and seeing if there are any interaction terms.\ncorrplot(cor(select(train, -RIVER)))\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:55:20.237033Z","iopub.execute_input":"2022-05-03T12:55:20.238708Z","iopub.status.idle":"2022-05-03T12:55:20.406148Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Insights:-\n# medv decreases with increase in crim (medium), \n# indus (High),\n# nox(low),\n# age(low),\n# rad(low),\n# tax(low),\n# ptratio(high), \n# lstat (High)\n# zn(low),\n# rm(High).","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:55:44.164954Z","iopub.execute_input":"2022-05-03T12:55:44.166754Z","iopub.status.idle":"2022-05-03T12:55:44.179977Z"}}},{"cell_type":"code","source":"# Visualizing the distribution of the target variable \ntrain %>% \n  ggplot(aes(MEDV)) +\n  stat_density() + \n  theme_bw()","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:56:36.098824Z","iopub.execute_input":"2022-05-03T12:56:36.100454Z","iopub.status.idle":"2022-05-03T12:56:36.785316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# The above visualizations reveal that peak densities of medv are in between 15 and 30.\n","metadata":{}},{"cell_type":"code","source":"# Using plotly\nggplotly(train %>% \n           ggplot(aes(MEDV)) +\n           stat_density() + \n           theme_bw())","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:57:18.522993Z","iopub.execute_input":"2022-05-03T12:57:18.524607Z","iopub.status.idle":"2022-05-03T12:57:21.455863Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# The above visualizations reveal that peak densities of medv are in between 15 and 30.\n","metadata":{}},{"cell_type":"code","source":"library(reshape)\n\n# Let's see the effect of the variables in the dataframe on medv.\ntrain %>%\n  select(c(CRIM, ROOMS, AGE, RAD, TAX, LSTAT, MEDV, INDUS, NOC, PTRATIO, ZN)) %>%\n  melt(id.vars = \"MEDV\") %>%\n  ggplot(aes(x = value, y = MEDV, colour = variable)) +\n  geom_point(alpha = 0.7) +\n  stat_smooth(aes(colour = \"black\")) +\n  facet_wrap(~variable, scales = \"free\", ncol = 2) +\n  labs(x = \"Variable Value\", y = \"Median House Price (inr 10 lakhs)\") +\n  theme_minimal()\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T12:59:39.262753Z","iopub.execute_input":"2022-05-03T12:59:39.264541Z","iopub.status.idle":"2022-05-03T12:59:41.58572Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Model Building & Prediction\n\n\n# Training our Model\n\n# Lets build our model considering that crim, rm, tax, lstat as the major influencers on the target variable.\n\nmodel1 <- lm(MEDV ~ ., data = train)\nsummary(model1)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:00:23.102475Z","iopub.execute_input":"2022-05-03T13:00:23.104212Z","iopub.status.idle":"2022-05-03T13:00:23.144308Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model2\n\nmodel2 <- lm(MEDV ~ . -ID, data = train)\nsummary(model2)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:00:37.973227Z","iopub.execute_input":"2022-05-03T13:00:37.974921Z","iopub.status.idle":"2022-05-03T13:00:37.999446Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model3\n\nmodel3 <- lm(MEDV ~ . -ID -RIVER, data = train)\nsummary(model3)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:00:51.075846Z","iopub.execute_input":"2022-05-03T13:00:51.077615Z","iopub.status.idle":"2022-05-03T13:00:51.104253Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model4\n\nmodel4 <- lm(MEDV ~ . -ID -RIVER -INDUS, data = train)\nsummary(model4)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:01:05.124125Z","iopub.execute_input":"2022-05-03T13:01:05.126055Z","iopub.status.idle":"2022-05-03T13:01:05.15426Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model5\n\nmodel5 <- lm(MEDV ~ . -ID -RIVER -INDUS -ZN, data = train)\nsummary(model5)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:01:35.149381Z","iopub.execute_input":"2022-05-03T13:01:35.151081Z","iopub.status.idle":"2022-05-03T13:01:35.175562Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model6\n\nmodel6 <- lm(MEDV ~ . -ID -RIVER -INDUS -ZN -RAD, data = train)\nsummary(model6)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:01:53.740166Z","iopub.execute_input":"2022-05-03T13:01:53.741887Z","iopub.status.idle":"2022-05-03T13:01:53.765826Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Let the algorithm decide the variables to be excluded as for some p-values were high\nstep(model6, direction = \"both\") ","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:02:02.028844Z","iopub.execute_input":"2022-05-03T13:02:02.030565Z","iopub.status.idle":"2022-05-03T13:02:02.065596Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Running the model as suggested by the algorithm\nmodel7 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + NOC + ROOMS + \n                       AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT) - ID - RIVER - \n     INDUS - ZN - RAD, data = train)\nsummary(model7)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:03:04.383408Z","iopub.execute_input":"2022-05-03T13:03:04.385059Z","iopub.status.idle":"2022-05-03T13:03:04.409322Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# RMSE\n\nrmse(train$MEDV, predict(model7, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:03:07.836398Z","iopub.execute_input":"2022-05-03T13:03:07.838054Z","iopub.status.idle":"2022-05-03T13:03:07.855504Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Log transformations & Checking outliers\n\n#CRIM\n\nhist(train$CRIM)\nlogcrim <- log(train$CRIM)\nhist(logcrim)\n\n\nboxplot(train$CRIM)\nboxplot(logcrim)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:03:32.713314Z","iopub.execute_input":"2022-05-03T13:03:32.715003Z","iopub.status.idle":"2022-05-03T13:03:32.956617Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog1\n\nmodellog1 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + NOC + ROOMS + \n                                 AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim) - ID - RIVER - CRIM\n               -INDUS - ZN - RAD, data = train)\nsummary(modellog1)\n\nrmse(train$MEDV, predict(modellog1, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:04:10.486431Z","iopub.execute_input":"2022-05-03T13:04:10.488246Z","iopub.status.idle":"2022-05-03T13:04:10.520522Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# NOC\n\nhist(train$NOC)\nroot5noc <- (train$NOC)^(1/5)\nhist(root5noc)\n\n\nboxplot(train$NOC)\nboxplot(root5noc)\n\nroot5noc\nsummary(root5noc)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:04:58.701251Z","iopub.execute_input":"2022-05-03T13:04:58.702883Z","iopub.status.idle":"2022-05-03T13:04:58.959526Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog2\n\nmodellog2 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                   + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC, data = train)\nsummary(modellog2)\n\nrmse(train$MEDV, predict(modellog2, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:05:37.54314Z","iopub.execute_input":"2022-05-03T13:05:37.544833Z","iopub.status.idle":"2022-05-03T13:05:37.577341Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# DIS\n\nhist(train$DIS)\nlogdis <- log(sqrt(train$DIS))\nhist(logdis)\n\n\nboxplot(train$DIS)\nboxplot(logdis)\n\nlogdis\nsummary(logdis)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:05:58.295187Z","iopub.execute_input":"2022-05-03T13:05:58.29692Z","iopub.status.idle":"2022-05-03T13:05:58.553895Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog3\n\nmodellog3 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS, data = train)\nsummary(modellog3)\n\nrmse(train$MEDV, predict(modellog3, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:09:22.499723Z","iopub.execute_input":"2022-05-03T13:09:22.501544Z","iopub.status.idle":"2022-05-03T13:09:22.536787Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# TAX\n\nhist(train$TAX)\nlogtax <- log(sqrt(train$TAX)^(1/3))\nhist(logtax)\n\n\nboxplot(train$TAX)\nboxplot(logtax)\n\nlogtax\nsummary(logtax)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:09:57.542562Z","iopub.execute_input":"2022-05-03T13:09:57.544182Z","iopub.status.idle":"2022-05-03T13:09:57.794868Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog4\n\nmodellog4 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX, data = train)\nsummary(modellog4)\n\nrmse(train$MEDV, predict(modellog4, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:10:36.930123Z","iopub.execute_input":"2022-05-03T13:10:36.932069Z","iopub.status.idle":"2022-05-03T13:10:36.972579Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# PTRATIO\n\nhist(train$PTRATIO)\nlogptratio <- log(sqrt(train$PTRATIO)^(1/3))\nhist(logptratio)\n\n\nboxplot(train$PTRATIO)\nboxplot(logptratio)\n\nlogptratio\nsummary(logptratio)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:11:01.519417Z","iopub.execute_input":"2022-05-03T13:11:01.521206Z","iopub.status.idle":"2022-05-03T13:11:01.778049Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog5\n\nmodellog5 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax + logptratio) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX - PTRATIO, data = train)\nsummary(modellog5)\n\nrmse(train$MEDV, predict(modellog5, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:11:22.666043Z","iopub.execute_input":"2022-05-03T13:11:22.667723Z","iopub.status.idle":"2022-05-03T13:11:22.705451Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# B\n\nhist(train$B)\nlogb <- sqrt(train$B)\nhist(logb)\n\n\nboxplot(train$B)\nboxplot(logb)\n\nlogb\nsummary(logb)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:11:37.867202Z","iopub.execute_input":"2022-05-03T13:11:37.868948Z","iopub.status.idle":"2022-05-03T13:11:38.148323Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog6\n\nmodellog6 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax + logptratio + logb) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX - PTRATIO - B, data = train)\nsummary(modellog6)\n\nrmse(train$MEDV, predict(modellog6, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:12:04.32116Z","iopub.execute_input":"2022-05-03T13:12:04.322834Z","iopub.status.idle":"2022-05-03T13:12:04.354534Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# LSTAT\n\nhist(train$LSTAT)\nloglstat <- sqrt(log(train$LSTAT))^(1/5)\nhist(logb)\n\n\nboxplot(train$LSTAT)\nboxplot(loglstat)\n\nloglstat\nsummary(loglstat)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:12:26.668704Z","iopub.execute_input":"2022-05-03T13:12:26.670338Z","iopub.status.idle":"2022-05-03T13:12:26.929837Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog7\n\nmodellog7 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax + logptratio + logb + loglstat) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX - PTRATIO - B - LSTAT, data = train)\nsummary(modellog7)\n\nrmse(train$MEDV, predict(modellog7, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:12:46.689328Z","iopub.execute_input":"2022-05-03T13:12:46.691042Z","iopub.status.idle":"2022-05-03T13:12:46.724635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Using RandomForest\nmodelrandom1 <- randomForest(MEDV ~ .,\n                      data = train)\nsummary(modelrandom1)\nmodelrandom1\n\nrmse(train$MEDV, predict(modelrandom1, train))\n\nplot(modelrandom1)\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:13:12.616969Z","iopub.execute_input":"2022-05-03T13:13:12.62007Z","iopub.status.idle":"2022-05-03T13:13:13.181967Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# INDUS\n\nhist(train$INDUS)\nlogindus <- log(sqrt(train$INDUS))\nhist(logindus)\n\nboxplot(train$INDUS)\nboxplot(logindus)\n\nlogindus\nsummary(logindus)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:13:35.040452Z","iopub.execute_input":"2022-05-03T13:13:35.042226Z","iopub.status.idle":"2022-05-03T13:13:35.303756Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom2\n\nmodelrandom2 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS, \n                             data = train)\nsummary(modelrandom2)\nmodelrandom2\n\nrmse(train$MEDV, predict(modelrandom2, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:14:34.382516Z","iopub.execute_input":"2022-05-03T13:14:34.38411Z","iopub.status.idle":"2022-05-03T13:14:34.738818Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom3\n\nmodelrandom3 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER, \n                             data = train)\nsummary(modelrandom3)\nmodelrandom3\n\nrmse(train$MEDV, predict(modelrandom3, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:14:58.962077Z","iopub.execute_input":"2022-05-03T13:14:58.963698Z","iopub.status.idle":"2022-05-03T13:14:59.313028Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ROOMS\n\nhist(train$ROOMS)\nlogrooms <- log(sqrt(train$ROOMS))\nhist(logrooms)\n\nboxplot(train$ROOMS)\nboxplot(logrooms)\n\nlogrooms\nsummary(logrooms)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:15:13.86752Z","iopub.execute_input":"2022-05-03T13:15:13.869144Z","iopub.status.idle":"2022-05-03T13:15:14.130065Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom4\n\nmodelrandom4 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS, \n                             data = train)\nsummary(modelrandom4)\nmodelrandom4\n\nrmse(train$MEDV, predict(modelrandom4, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:15:35.369806Z","iopub.execute_input":"2022-05-03T13:15:35.371422Z","iopub.status.idle":"2022-05-03T13:15:35.79959Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# AGE\n\nhist(train$AGE)\nlogage <- sqrt(log(train$AGE))^(1/15)\nhist(logage)\n\nboxplot(train$AGE)\nboxplot(logage)\n\nlogage\nsummary(logage)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:15:50.649424Z","iopub.execute_input":"2022-05-03T13:15:50.650991Z","iopub.status.idle":"2022-05-03T13:15:50.909049Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom5\n\nmodelrandom5 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms + logage) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS - AGE, \n                             data = train)\nsummary(modelrandom5)\nmodelrandom5\n\nrmse(train$MEDV, predict(modelrandom5, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:16:20.916724Z","iopub.execute_input":"2022-05-03T13:16:20.918408Z","iopub.status.idle":"2022-05-03T13:16:21.372754Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom6\n\nmodelrandom6 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms + logage) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS - AGE - RAD, \n                             data = train)\nsummary(modelrandom6)\nmodelrandom6\n\nrmse(train$MEDV, predict(modelrandom6, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:16:51.381229Z","iopub.execute_input":"2022-05-03T13:16:51.382813Z","iopub.status.idle":"2022-05-03T13:16:51.816985Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom7\n\nmodelrandom7 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms + logage) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS - AGE\n                             - RAD - ID, \n                             data = train)\nsummary(modelrandom7)\nmodelrandom7\n\nrmse(train$MEDV, predict(modelrandom7, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:17:16.131727Z","iopub.execute_input":"2022-05-03T13:17:16.133352Z","iopub.status.idle":"2022-05-03T13:17:16.568919Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Final Model : modelrandom1\nmodelrandom1 <- randomForest(MEDV ~ .,\n                             data = train)\nsummary(modelrandom1)\nmodelrandom1\n\nrmse(train$MEDV, predict(modelrandom1, train))","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:17:40.675078Z","iopub.execute_input":"2022-05-03T13:17:40.676804Z","iopub.status.idle":"2022-05-03T13:17:41.185159Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualizing our Model\n\n# Lets visualize our linear regression model by plotting the residuals. \n# The difference between the observed value of the dependent variable (y) and the predicted value (y) \n# is called the residual (e).\n\nres <- residuals(modelrandom1)\n\n# Convert residuals to a DataFrame \nres <- as.data.frame(res)\n\nggplot(res, aes(res)) +  \n  geom_histogram(fill = 'blue', alpha = 0.5)\n\n\nplot(modelrandom1)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:18:07.754013Z","iopub.execute_input":"2022-05-03T13:18:07.755633Z","iopub.status.idle":"2022-05-03T13:18:07.959145Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Predictions\n\n# Let us test our model by predicting on our testing dataset.\n# test$predicted.MEDV <- predict(model, test)\n# head(test)\n\npred <- predict(modelrandom1, type = \"response\", newdata = test)\nhead(pred)\n\nsummary(pred)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:18:30.212471Z","iopub.execute_input":"2022-05-03T13:18:30.214256Z","iopub.status.idle":"2022-05-03T13:18:30.244704Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Assessing our Model\n# error <- test$MEDV - test$predicted.MEDV\n# rmse <- sqrt(mean(error)^2)\n# rmse\n\n\n# Check the RMSE score of train dataset\nrmse(train$MEDV, predict(modelrandom1, train))\n","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:18:49.34116Z","iopub.execute_input":"2022-05-03T13:18:49.342777Z","iopub.status.idle":"2022-05-03T13:18:49.376594Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Add the MEDV variable to the test dataset\ntest$MEDV <- predict(modelrandom1, type = \"response\", newdata = test)\nhead(test)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:18:59.107038Z","iopub.execute_input":"2022-05-03T13:18:59.10858Z","iopub.status.idle":"2022-05-03T13:18:59.143604Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plot the predicted and test$MEDV\nplot(pred ~ test$MEDV)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:19:17.23119Z","iopub.execute_input":"2022-05-03T13:19:17.23289Z","iopub.status.idle":"2022-05-03T13:19:17.309058Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Create the prescribed format for submission on Kaggle\n\noutput.df <- test %>%\n  select(ID, MEDV)\noutput.df","metadata":{"execution":{"iopub.status.busy":"2022-05-03T13:19:36.898882Z","iopub.execute_input":"2022-05-03T13:19:36.900521Z","iopub.status.idle":"2022-05-03T13:19:36.958057Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# save the file\n\nsubmit <- read.csv(\"/kaggle/input/house-price-prediction-of-indore-3gb11/IndoreHP_Sample.csv\")\n\nwrite.csv(submit, 'submission.csv', row.names = FALSE)","metadata":{"execution":{"iopub.status.busy":"2022-05-03T14:21:30.314309Z","iopub.execute_input":"2022-05-03T14:21:30.31603Z","iopub.status.idle":"2022-05-03T14:21:30.35747Z"},"trusted":true},"execution_count":null,"outputs":[]}]}