{"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"codemirror_mode":"r","file_extension":".r","mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This R environment comes with many helpful analytics packages installed\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n# For example, here's a helpful package to load\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\nlibrary(gmodels)\nlibrary(gridExtra)\nlibrary(moments)\nlibrary(corrplot)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_execution_state":"idle","_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","execution":{"iopub.status.busy":"2022-05-01T14:41:07.065291Z","iopub.execute_input":"2022-05-01T14:41:07.067654Z","iopub.status.idle":"2022-05-01T14:41:07.136786Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# May playground EDA in R\n \n In this notebook I do an initial EDA in R for the May Kaggle Tabular playground. \n","metadata":{}},{"cell_type":"markdown","source":"# Initial data load\nFirst let's read in the data and get an overview of it","metadata":{}},{"cell_type":"code","source":"#Read in the data\ndf1 <- read_csv('../input/tabular-playground-series-may-2022/train.csv')","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:37:43.07494Z","iopub.execute_input":"2022-05-01T14:37:43.076518Z","iopub.status.idle":"2022-05-01T14:37:50.963319Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Get an overview of the columns and datatypes\nstr(df1)","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:37:50.967044Z","iopub.execute_input":"2022-05-01T14:37:50.968772Z","iopub.status.idle":"2022-05-01T14:37:51.038013Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"All bar one of the columns is numerical.","metadata":{}},{"cell_type":"code","source":"#Data frame with only numerical columns\n\ndf1num <- df1 %>%\nselect(starts_with('f'), target) %>%\nselect(-f_27)\n\n#Data frame with only categorical variables\ndf1cat <- df1 %>%\nselect(f_27)","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:41:47.325412Z","iopub.execute_input":"2022-05-01T14:41:47.327332Z","iopub.status.idle":"2022-05-01T14:41:47.357815Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Univariate analysis\nFirst let's analysis each column independently","metadata":{}},{"cell_type":"markdown","source":"# Target variable analysis\nFirst let's understand the target variable","metadata":{}},{"cell_type":"code","source":"# Understand the distribution of the target variable \ndf1 %>%\ncount(target)","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:37:51.129364Z","iopub.execute_input":"2022-05-01T14:37:51.131241Z","iopub.status.idle":"2022-05-01T14:37:51.225298Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The data is broadly balanced, no further sampling required.","metadata":{}},{"cell_type":"markdown","source":"# Missing value analysis\nNext let's understand what proportion of the data is missing for each column. ","metadata":{}},{"cell_type":"code","source":"#Understand how many missing values there are by column.\nsapply(X = df1, FUN = function(x) sum(is.na(x)))","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:37:51.228722Z","iopub.execute_input":"2022-05-01T14:37:51.230999Z","iopub.status.idle":"2022-05-01T14:37:51.560932Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There are no missing values - great - pre-processing missing values won't be required.  Given there are no missing values - there is no need to analysis missing values by row.","metadata":{}},{"cell_type":"markdown","source":"# Numerical value analysis\nNext let's understand the distribution of each numerical variable.","metadata":{}},{"cell_type":"code","source":"#Analyse the distrubtion for the first 15 variables\nf_00p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_00))\n\nf_01p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_01))\n\nf_02p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_02))\n\nf_03p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_03))\n\nf_04p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_04))\n\nf_05p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_05))\n\nf_06p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_06))\n\nf_07p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_07))\n\nf_08p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_08))\n\nf_09p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_09))\n\nf_10p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_10))\n\nf_11p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_11))\n\nf_12p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_12))\n\nf_13p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_13))\n\nf_14p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_14))\n\nf_15p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_15))\n\ngrid.arrange(f_00p,f_01p, f_02p, f_03p,f_04p,f_05p,f_06p,f_07p,f_08p,f_09p,f_10p,f_11p,f_11p,f_12p,f_13p, f_14p, f_15p)","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:37:51.563631Z","iopub.execute_input":"2022-05-01T14:37:51.565109Z","iopub.status.idle":"2022-05-01T14:38:15.197863Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Analyse the distrubtion for the next 14 variables\nf_16p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_16))\n\nf_17p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_17))\n\nf_18p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_18))\n\nf_19p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_19))\n\nf_20p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_20))\n\nf_21p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_21))\n\nf_22p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_22))\n\nf_23p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_23))\n\nf_24p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_24))\n\nf_25p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_25))\n\nf_26p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_26))\n\nf_28p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_28))\n\nf_29p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_29))\n\nf_30p <- df1 %>%\nggplot() +\ngeom_boxplot(aes(f_30))\n\n\n\ngrid.arrange(f_16p,f_01p, f_17p, f_18p,f_19p,f_20p,f_21p,f_22p,f_23p,f_24p,f_25p,f_26p,f_28p,f_29p, f_30p)","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:38:15.200576Z","iopub.execute_input":"2022-05-01T14:38:15.202158Z","iopub.status.idle":"2022-05-01T14:38:20.071954Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Unsurprsingly there are quite a few outliers for many of the features.  The boxplot for many variables also looks quite skewed. Feature 29 and 30 also look odd - let's investigate further. First, let's look at the skew. ","metadata":{}},{"cell_type":"code","source":"#Analyse skew for the numerical variables\nx  <- skewness(df1num)\nsort(x)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Some of the features are highly skewed as we suspected from the boxplots. Next let's look at feature 29 and 30 in more detail.","metadata":{}},{"cell_type":"code","source":"#Analyse feature 29 and 30 in more detail\n\nf_29fq <- df1 %>%\nselect(f_29) %>%\nggplot() +\ngeom_freqpoly(aes(f_29))\n\nf_30fq <- df1 %>%\nselect(f_30) %>%\nggplot() +\ngeom_freqpoly(aes(f_30))\n\nprint(f_29fq)\nprint(f_30fq)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"f29 can either be 1 or 0 and f30 can be 0, 1, or 2 hence why the boxplot was looking odd.","metadata":{}},{"cell_type":"markdown","source":"# Categorical variable analysis\nNext let's look at the categorical variables.","metadata":{}},{"cell_type":"code","source":"# Identify how many unique values there are \nunique(df1cat)","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:38:20.950511Z","iopub.execute_input":"2022-05-01T14:38:20.952189Z","iopub.status.idle":"2022-05-01T14:38:21.088557Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"This is unlikely to be useful in predicting the target variable as there are so mamy unique values.","metadata":{}},{"cell_type":"markdown","source":"# Bivariate analysis\n\nNext let's look at the relationship between the numerical values.","metadata":{}},{"cell_type":"code","source":"#Analyse the correlation in a table\ndf1num %>%\ncor(method = 'pearson')","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:49:10.215363Z","iopub.execute_input":"2022-05-01T14:49:10.217265Z","iopub.status.idle":"2022-05-01T14:49:11.670189Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Analyse the correlation in a graph\ndf1num %>%\ncor() %>%\ncorrplot(method = 'color', type = 'upper')","metadata":{"execution":{"iopub.status.busy":"2022-05-01T14:44:40.216723Z","iopub.execute_input":"2022-05-01T14:44:40.218361Z","iopub.status.idle":"2022-05-01T14:44:41.631545Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"None of the features on their own seem to correlate the target very strongly. ","metadata":{}},{"cell_type":"markdown","source":"# Summary of pre-processing required\n\n* Feature scaling of numerical values\n* Removal of f_027\n* Removal of outliers","metadata":{}}]}