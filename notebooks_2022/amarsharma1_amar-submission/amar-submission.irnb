{"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"codemirror_mode":"r","file_extension":".r","mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"4.0.5"},"papermill":{"default_parameters":{},"duration":37.329134,"end_time":"2022-05-03T14:23:17.947427","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2022-05-03T14:22:40.618293","version":"2.3.4"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This R environment comes with many helpful analytics packages installed\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n# For example, here's a helpful package to load\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_execution_state":"idle","_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","papermill":{"duration":1.465298,"end_time":"2022-05-03T14:22:45.779514","exception":false,"start_time":"2022-05-03T14:22:44.314216","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.288118Z","iopub.execute_input":"2022-05-03T19:23:07.28971Z","iopub.status.idle":"2022-05-03T19:23:07.312184Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Load packages and libraries\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(corrplot)\nlibrary(rpart)\nlibrary(moments)\nlibrary(Metrics)\nlibrary(readxl)\nlibrary(readr)\nlibrary(caret)\nlibrary(plotly)\nlibrary(randomForest)\n","metadata":{"papermill":{"duration":2.790155,"end_time":"2022-05-03T14:22:48.586298","exception":false,"start_time":"2022-05-03T14:22:45.796143","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.315664Z","iopub.execute_input":"2022-05-03T19:23:07.317199Z","iopub.status.idle":"2022-05-03T19:23:07.348047Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Read the Indore housing dataset - Train\ntrain <- read.csv('/kaggle/input/house-price-prediction-of-indore-3gb11/IndoreHP_Train.csv', header = TRUE)\nhead(train)","metadata":{"papermill":{"duration":0.079425,"end_time":"2022-05-03T14:22:48.683102","exception":false,"start_time":"2022-05-03T14:22:48.603677","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.350646Z","iopub.execute_input":"2022-05-03T19:23:07.352167Z","iopub.status.idle":"2022-05-03T19:23:07.388894Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check the dimensions of the dataset\ndim(train)","metadata":{"papermill":{"duration":0.040409,"end_time":"2022-05-03T14:22:48.740924","exception":false,"start_time":"2022-05-03T14:22:48.700515","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.391416Z","iopub.execute_input":"2022-05-03T19:23:07.392868Z","iopub.status.idle":"2022-05-03T19:23:07.40891Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# View the structure of the dataset\nstr(train)","metadata":{"papermill":{"duration":0.055112,"end_time":"2022-05-03T14:22:48.814269","exception":false,"start_time":"2022-05-03T14:22:48.759157","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.411663Z","iopub.execute_input":"2022-05-03T19:23:07.4132Z","iopub.status.idle":"2022-05-03T19:23:07.438816Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Read the Indore housing dataset - Test\ntest <- read.csv('/kaggle/input/house-price-prediction-of-indore-3gb11/IndoreHP_Test.csv', header = TRUE)\nhead(test)","metadata":{"papermill":{"duration":0.064516,"end_time":"2022-05-03T14:22:48.896854","exception":false,"start_time":"2022-05-03T14:22:48.832338","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.441465Z","iopub.execute_input":"2022-05-03T19:23:07.442958Z","iopub.status.idle":"2022-05-03T19:23:07.475271Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check the dimensions of the dataset\ndim(test)","metadata":{"papermill":{"duration":0.061503,"end_time":"2022-05-03T14:22:48.97652","exception":false,"start_time":"2022-05-03T14:22:48.915017","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.478079Z","iopub.execute_input":"2022-05-03T19:23:07.479554Z","iopub.status.idle":"2022-05-03T19:23:07.495742Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# View the structure of the dataset\nstr(test)","metadata":{"papermill":{"duration":0.052629,"end_time":"2022-05-03T14:22:49.04914","exception":false,"start_time":"2022-05-03T14:22:48.996511","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.498581Z","iopub.execute_input":"2022-05-03T19:23:07.50031Z","iopub.status.idle":"2022-05-03T19:23:07.525679Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Analyze the summary of all the variables of the dataset\nsummary(train)","metadata":{"papermill":{"duration":0.048352,"end_time":"2022-05-03T14:22:49.116551","exception":false,"start_time":"2022-05-03T14:22:49.068199","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.528303Z","iopub.execute_input":"2022-05-03T19:23:07.529747Z","iopub.status.idle":"2022-05-03T19:23:07.551172Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Analyze the summary of all the variables of the dataset\nsummary(test)","metadata":{"papermill":{"duration":0.047545,"end_time":"2022-05-03T14:22:49.183102","exception":false,"start_time":"2022-05-03T14:22:49.135557","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.553716Z","iopub.execute_input":"2022-05-03T19:23:07.555141Z","iopub.status.idle":"2022-05-03T19:23:07.575791Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking variable names\nnames(train)\nnames(test)","metadata":{"papermill":{"duration":0.047579,"end_time":"2022-05-03T14:22:49.250345","exception":false,"start_time":"2022-05-03T14:22:49.202766","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.578345Z","iopub.execute_input":"2022-05-03T19:23:07.579843Z","iopub.status.idle":"2022-05-03T19:23:07.60126Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Find the missing values in the dataset\nsum(is.na(train))\nsum(is.na(test))","metadata":{"papermill":{"duration":0.047896,"end_time":"2022-05-03T14:22:49.317516","exception":false,"start_time":"2022-05-03T14:22:49.26962","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.603787Z","iopub.execute_input":"2022-05-03T19:23:07.605188Z","iopub.status.idle":"2022-05-03T19:23:07.625529Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#checking correlation between variables\ncorrplot(cor(train), method = \"number\", type = \"upper\", diag = FALSE)","metadata":{"papermill":{"duration":0.375175,"end_time":"2022-05-03T14:22:49.713604","exception":false,"start_time":"2022-05-03T14:22:49.338429","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.628063Z","iopub.execute_input":"2022-05-03T19:23:07.62943Z","iopub.status.idle":"2022-05-03T19:23:07.756601Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename columns using base R function\nnames(train)[names(train) == 'RIVER_FLG'] <- 'RIVER'\nnames(test)[names(test) == 'RIVER_FLG'] <- 'RIVER'","metadata":{"papermill":{"duration":0.04738,"end_time":"2022-05-03T14:22:49.784222","exception":false,"start_time":"2022-05-03T14:22:49.736842","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.75926Z","iopub.execute_input":"2022-05-03T19:23:07.760788Z","iopub.status.idle":"2022-05-03T19:23:07.775599Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename Mmultiple columns using dplyr\ntrain <- train %>%\n  rename(NOC = nitric.oxides.concentration,\n         ROOMS = X.rooms.dwelling)\n","metadata":{"papermill":{"duration":0.084242,"end_time":"2022-05-03T14:22:49.890171","exception":false,"start_time":"2022-05-03T14:22:49.805929","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.778225Z","iopub.execute_input":"2022-05-03T19:23:07.779661Z","iopub.status.idle":"2022-05-03T19:23:07.911339Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Rename Mmultiple columns using dplyr\ntest <- test %>%\n  rename(NOC = nitric.oxides.concentration,\n         ROOMS = X.rooms.dwelling)","metadata":{"papermill":{"duration":0.046459,"end_time":"2022-05-03T14:22:49.959428","exception":false,"start_time":"2022-05-03T14:22:49.912969","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check the changes\nhead(train)\nhead(test)","metadata":{"papermill":{"duration":0.080177,"end_time":"2022-05-03T14:22:50.062338","exception":false,"start_time":"2022-05-03T14:22:49.982161","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Check structure\nstr(train)\nstr(test)","metadata":{"papermill":{"duration":0.095637,"end_time":"2022-05-03T14:22:50.184143","exception":false,"start_time":"2022-05-03T14:22:50.088506","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Disable scientific notation for model summary\noptions(scipen=999)","metadata":{"papermill":{"duration":0.046649,"end_time":"2022-05-03T14:22:50.260776","exception":false,"start_time":"2022-05-03T14:22:50.214127","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"library(Amelia)\n\n# Check for any NA's in the dataframe.\nmissmap(train, col = c('yellow', 'black'), y.at = 1, y.labels = '', legend = TRUE)\n\nmissmap(test, col = c('yellow', 'black'), y.at = 1, y.labels = '', legend = TRUE)","metadata":{"papermill":{"duration":0.352752,"end_time":"2022-05-03T14:22:50.639123","exception":false,"start_time":"2022-05-03T14:22:50.286371","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Correlation plots are a great way of exploring data and seeing if there are any interaction terms.\ncorrplot(cor(select(train, -RIVER)))\n","metadata":{"papermill":{"duration":0.230122,"end_time":"2022-05-03T14:22:50.895164","exception":false,"start_time":"2022-05-03T14:22:50.665042","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Insights:-\n# medv decreases with increase in crim (medium), \n# indus (High),\n# nox(low),\n# age(low),\n# rad(low),\n# tax(low),\n# ptratio(high), \n# lstat (High)\n# zn(low),\n# rm(High).","metadata":{"execution":{"iopub.execute_input":"2022-05-03T12:55:44.166754Z","iopub.status.busy":"2022-05-03T12:55:44.164954Z","iopub.status.idle":"2022-05-03T12:55:44.179977Z"},"papermill":{"duration":0.028124,"end_time":"2022-05-03T14:22:50.951323","exception":false,"start_time":"2022-05-03T14:22:50.923199","status":"completed"},"tags":[]}},{"cell_type":"code","source":"# Visualizing the distribution of the target variable \ntrain %>% \n  ggplot(aes(MEDV)) +\n  stat_density() + \n  theme_bw()","metadata":{"papermill":{"duration":0.742561,"end_time":"2022-05-03T14:22:51.724966","exception":false,"start_time":"2022-05-03T14:22:50.982405","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# The above visualizations reveal that peak densities of medv are in between 15 and 30.\n","metadata":{"papermill":{"duration":0.02915,"end_time":"2022-05-03T14:22:51.782824","exception":false,"start_time":"2022-05-03T14:22:51.753674","status":"completed"},"tags":[]}},{"cell_type":"code","source":"# Using plotly\nggplotly(train %>% \n           ggplot(aes(MEDV)) +\n           stat_density() + \n           theme_bw())","metadata":{"papermill":{"duration":3.032977,"end_time":"2022-05-03T14:22:54.843869","exception":false,"start_time":"2022-05-03T14:22:51.810892","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# The above visualizations reveal that peak densities of medv are in between 15 and 30.\n","metadata":{"papermill":{"duration":0.123309,"end_time":"2022-05-03T14:22:55.094254","exception":false,"start_time":"2022-05-03T14:22:54.970945","status":"completed"},"tags":[]}},{"cell_type":"code","source":"library(reshape)\n\n# Let's see the effect of the variables in the dataframe on medv.\ntrain %>%\n  select(c(CRIM, ROOMS, AGE, RAD, TAX, LSTAT, MEDV, INDUS, NOC, PTRATIO, ZN)) %>%\n  melt(id.vars = \"MEDV\") %>%\n  ggplot(aes(x = value, y = MEDV, colour = variable)) +\n  geom_point(alpha = 0.7) +\n  stat_smooth(aes(colour = \"black\")) +\n  facet_wrap(~variable, scales = \"free\", ncol = 2) +\n  labs(x = \"Variable Value\", y = \"Median House Price (inr 10 lakhs)\") +\n  theme_minimal()\n","metadata":{"papermill":{"duration":2.448756,"end_time":"2022-05-03T14:22:57.662119","exception":false,"start_time":"2022-05-03T14:22:55.213363","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Model Building & Prediction\n\n\n# Training our Model\n\n# Lets build our model considering that crim, rm, tax, lstat as the major influencers on the target variable.\n\nmodel1 <- lm(MEDV ~ ., data = train)\nsummary(model1)","metadata":{"papermill":{"duration":0.162685,"end_time":"2022-05-03T14:22:57.948639","exception":false,"start_time":"2022-05-03T14:22:57.785954","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model2\n\nmodel2 <- lm(MEDV ~ . -ID, data = train)\nsummary(model2)","metadata":{"papermill":{"duration":0.153239,"end_time":"2022-05-03T14:22:58.222971","exception":false,"start_time":"2022-05-03T14:22:58.069732","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model3\n\nmodel3 <- lm(MEDV ~ . -ID -RIVER, data = train)\nsummary(model3)","metadata":{"papermill":{"duration":0.1532,"end_time":"2022-05-03T14:22:58.499226","exception":false,"start_time":"2022-05-03T14:22:58.346026","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model4\n\nmodel4 <- lm(MEDV ~ . -ID -RIVER -INDUS, data = train)\nsummary(model4)\n","metadata":{"papermill":{"duration":0.188505,"end_time":"2022-05-03T14:22:58.811819","exception":false,"start_time":"2022-05-03T14:22:58.623314","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model5\n\nmodel5 <- lm(MEDV ~ . -ID -RIVER -INDUS -ZN, data = train)\nsummary(model5)\n","metadata":{"papermill":{"duration":0.156806,"end_time":"2022-05-03T14:22:59.092193","exception":false,"start_time":"2022-05-03T14:22:58.935387","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model6\n\nmodel6 <- lm(MEDV ~ . -ID -RIVER -INDUS -ZN -RAD, data = train)\nsummary(model6)\n","metadata":{"papermill":{"duration":0.158879,"end_time":"2022-05-03T14:22:59.375001","exception":false,"start_time":"2022-05-03T14:22:59.216122","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Let the algorithm decide the variables to be excluded as for some p-values were high\nstep(model6, direction = \"both\") ","metadata":{"papermill":{"duration":0.167898,"end_time":"2022-05-03T14:22:59.667938","exception":false,"start_time":"2022-05-03T14:22:59.50004","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Running the model as suggested by the algorithm\nmodel7 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + NOC + ROOMS + \n                       AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT) - ID - RIVER - \n     INDUS - ZN - RAD, data = train)\nsummary(model7)\n","metadata":{"papermill":{"duration":0.155512,"end_time":"2022-05-03T14:22:59.951743","exception":false,"start_time":"2022-05-03T14:22:59.796231","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# RMSE\n\nrmse(train$MEDV, predict(model7, train))","metadata":{"papermill":{"duration":0.413945,"end_time":"2022-05-03T14:23:00.490838","exception":false,"start_time":"2022-05-03T14:23:00.076893","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Log transformations & Checking outliers\n\n#CRIM\n\nhist(train$CRIM)\nlogcrim <- log(train$CRIM)\nhist(logcrim)\n\n\nboxplot(train$CRIM)\nboxplot(logcrim)","metadata":{"papermill":{"duration":0.390292,"end_time":"2022-05-03T14:23:01.006501","exception":false,"start_time":"2022-05-03T14:23:00.616209","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog1\n\nmodellog1 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + NOC + ROOMS + \n                                 AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim) - ID - RIVER - CRIM\n               -INDUS - ZN - RAD, data = train)\nsummary(modellog1)\n\n","metadata":{"papermill":{"duration":0.170153,"end_time":"2022-05-03T14:23:01.307226","exception":false,"start_time":"2022-05-03T14:23:01.137073","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# NOC\n\nhist(train$NOC)\nroot5noc <- (train$NOC)^(1/5)\nhist(root5noc)\n\n\nboxplot(train$NOC)\nboxplot(root5noc)\n\nroot5noc\nsummary(root5noc)","metadata":{"papermill":{"duration":0.404381,"end_time":"2022-05-03T14:23:01.838317","exception":false,"start_time":"2022-05-03T14:23:01.433936","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog2\n\nmodellog2 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                   + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC, data = train)\nsummary(modellog2)\n\nrmse(train$MEDV, predict(modellog2, train))","metadata":{"papermill":{"duration":0.17735,"end_time":"2022-05-03T14:23:02.151785","exception":false,"start_time":"2022-05-03T14:23:01.974435","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# DIS\n\nhist(train$DIS)\nlogdis <- log(sqrt(train$DIS))\nhist(logdis)\n\n\nboxplot(train$DIS)\nboxplot(logdis)\n\nlogdis\nsummary(logdis)","metadata":{"papermill":{"duration":0.403486,"end_time":"2022-05-03T14:23:02.689702","exception":false,"start_time":"2022-05-03T14:23:02.286216","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog3\n\nmodellog3 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS, data = train)\nsummary(modellog3)\n\nrmse(train$MEDV, predict(modellog3, train))","metadata":{"papermill":{"duration":0.180446,"end_time":"2022-05-03T14:23:03.00803","exception":false,"start_time":"2022-05-03T14:23:02.827584","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# TAX\n\nhist(train$TAX)\nlogtax <- log(sqrt(train$TAX)^(1/3))\nhist(logtax)\n\n\nboxplot(train$TAX)\nboxplot(logtax)\n\nlogtax\nsummary(logtax)","metadata":{"papermill":{"duration":0.423204,"end_time":"2022-05-03T14:23:03.569394","exception":false,"start_time":"2022-05-03T14:23:03.14619","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog4\n\nmodellog4 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX, data = train)\nsummary(modellog4)\n\nrmse(train$MEDV, predict(modellog4, train))","metadata":{"papermill":{"duration":0.211958,"end_time":"2022-05-03T14:23:03.924648","exception":false,"start_time":"2022-05-03T14:23:03.71269","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# PTRATIO\n\nhist(train$PTRATIO)\nlogptratio <- log(sqrt(train$PTRATIO)^(1/3))\nhist(logptratio)\n\n\nboxplot(train$PTRATIO)\nboxplot(logptratio)\n\nlogptratio\nsummary(logptratio)","metadata":{"papermill":{"duration":0.424271,"end_time":"2022-05-03T14:23:04.484571","exception":false,"start_time":"2022-05-03T14:23:04.0603","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog5\n\nmodellog5 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax + logptratio) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX - PTRATIO, data = train)\nsummary(modellog5)\n\nrmse(train$MEDV, predict(modellog5, train))","metadata":{"papermill":{"duration":0.189074,"end_time":"2022-05-03T14:23:04.817002","exception":false,"start_time":"2022-05-03T14:23:04.627928","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# B\n\nhist(train$B)\nlogb <- sqrt(train$B)\nhist(logb)\n\n\nboxplot(train$B)\nboxplot(logb)\n\nlogb\nsummary(logb)","metadata":{"papermill":{"duration":0.475579,"end_time":"2022-05-03T14:23:05.433219","exception":false,"start_time":"2022-05-03T14:23:04.95764","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog6\n\nmodellog6 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax + logptratio + logb) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX - PTRATIO - B, data = train)\nsummary(modellog6)\n\nrmse(train$MEDV, predict(modellog6, train))","metadata":{"papermill":{"duration":0.201584,"end_time":"2022-05-03T14:23:05.794413","exception":false,"start_time":"2022-05-03T14:23:05.592829","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# LSTAT\n\nhist(train$LSTAT)\nloglstat <- sqrt(log(train$LSTAT))^(1/5)\nhist(logb)\n\n\nboxplot(train$LSTAT)\nboxplot(loglstat)\n\nloglstat\nsummary(loglstat)","metadata":{"papermill":{"duration":0.447413,"end_time":"2022-05-03T14:23:06.385762","exception":false,"start_time":"2022-05-03T14:23:05.938349","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modellog7\n\nmodellog7 <- lm(formula = MEDV ~ (ID + CRIM + ZN + INDUS + RIVER + ROOMS + NOC\n                                  + AGE + DIS + RAD + TAX + PTRATIO + B + LSTAT + logcrim + root5noc + logdis\n                                  + logtax + logptratio + logb + loglstat) - ID - RIVER - CRIM\n                -INDUS - ZN - RAD - NOC - DIS - TAX - PTRATIO - B - LSTAT, data = train)\nsummary(modellog7)\n\nrmse(train$MEDV, predict(modellog7, train))","metadata":{"papermill":{"duration":0.187501,"end_time":"2022-05-03T14:23:06.725562","exception":false,"start_time":"2022-05-03T14:23:06.538061","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Using RandomForest\nmodelrandom1 <- randomForest(MEDV ~ .,\n                      data = train)\nsummary(modelrandom1)\nmodelrandom1\n\nrmse(train$MEDV, predict(modelrandom1, train))\n\nplot(modelrandom1)\n","metadata":{"papermill":{"duration":0.748353,"end_time":"2022-05-03T14:23:07.622099","exception":false,"start_time":"2022-05-03T14:23:06.873746","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# INDUS\n\nhist(train$INDUS)\nlogindus <- log(sqrt(train$INDUS))\nhist(logindus)\n\nboxplot(train$INDUS)\nboxplot(logindus)\n\nlogindus\nsummary(logindus)","metadata":{"papermill":{"duration":0.415908,"end_time":"2022-05-03T14:23:08.189136","exception":false,"start_time":"2022-05-03T14:23:07.773228","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom2\n\nmodelrandom2 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS, \n                             data = train)\nsummary(modelrandom2)\nmodelrandom2\n\nrmse(train$MEDV, predict(modelrandom2, train))","metadata":{"papermill":{"duration":0.520058,"end_time":"2022-05-03T14:23:08.865785","exception":false,"start_time":"2022-05-03T14:23:08.345727","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom3\n\nmodelrandom3 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER, \n                             data = train)\nsummary(modelrandom3)\nmodelrandom3\n\nrmse(train$MEDV, predict(modelrandom3, train))","metadata":{"papermill":{"duration":0.511854,"end_time":"2022-05-03T14:23:09.530284","exception":false,"start_time":"2022-05-03T14:23:09.01843","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ROOMS\n\nhist(train$ROOMS)\nlogrooms <- log(sqrt(train$ROOMS))\nhist(logrooms)\n\nboxplot(train$ROOMS)\nboxplot(logrooms)\n\nlogrooms\nsummary(logrooms)","metadata":{"papermill":{"duration":0.429713,"end_time":"2022-05-03T14:23:10.112773","exception":false,"start_time":"2022-05-03T14:23:09.68306","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom4\n\nmodelrandom4 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS, \n                             data = train)\nsummary(modelrandom4)\nmodelrandom4\n\nrmse(train$MEDV, predict(modelrandom4, train))","metadata":{"papermill":{"duration":0.82671,"end_time":"2022-05-03T14:23:11.097793","exception":false,"start_time":"2022-05-03T14:23:10.271083","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# AGE\n\nhist(train$AGE)\nlogage <- sqrt(log(train$AGE))^(1/15)\nhist(logage)\n\nboxplot(train$AGE)\nboxplot(logage)\n\nlogage\nsummary(logage)","metadata":{"papermill":{"duration":0.417903,"end_time":"2022-05-03T14:23:11.668838","exception":false,"start_time":"2022-05-03T14:23:11.250935","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom5\n\nmodelrandom5 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms + logage) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS - AGE, \n                             data = train)\nsummary(modelrandom5)\nmodelrandom5\n\nrmse(train$MEDV, predict(modelrandom5, train))","metadata":{"papermill":{"duration":0.605463,"end_time":"2022-05-03T14:23:12.437908","exception":false,"start_time":"2022-05-03T14:23:11.832445","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom6\n\nmodelrandom6 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms + logage) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS - AGE - RAD, \n                             data = train)\nsummary(modelrandom6)\nmodelrandom6\n\nrmse(train$MEDV, predict(modelrandom6, train))","metadata":{"papermill":{"duration":0.59855,"end_time":"2022-05-03T14:23:13.191378","exception":false,"start_time":"2022-05-03T14:23:12.592828","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# modelrandom7\n\nmodelrandom7 <- randomForest(MEDV ~ (loglstat + logcrim + root5noc + logdis + logtax + logptratio + logb \n                                     + logindus + logrooms + logage) \n                             - LSTAT - CRIM - NOC - DIS - TAX - PTRATIO - B - ZN - INDUS - RIVER - ROOMS - AGE\n                             - RAD - ID, \n                             data = train)\nsummary(modelrandom7)\nmodelrandom7\n\nrmse(train$MEDV, predict(modelrandom7, train))","metadata":{"papermill":{"duration":0.603983,"end_time":"2022-05-03T14:23:13.953932","exception":false,"start_time":"2022-05-03T14:23:13.349949","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Final Model : modelrandom1\nmodelrandom1 <- randomForest(MEDV ~ .,\n                             data = train)\nsummary(modelrandom1)\nmodelrandom1\n\nrmse(train$MEDV, predict(modelrandom1, train))","metadata":{"papermill":{"duration":0.659553,"end_time":"2022-05-03T14:23:14.772063","exception":false,"start_time":"2022-05-03T14:23:14.11251","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualizing our Model\n\n# Lets visualize our linear regression model by plotting the residuals. \n# The difference between the observed value of the dependent variable (y) and the predicted value (y) \n# is called the residual (e).\n\nres <- residuals(modelrandom1)\n\n# Convert residuals to a DataFrame \nres <- as.data.frame(res)\n\nggplot(res, aes(res)) +  \n  geom_histogram(fill = 'blue', alpha = 0.5)\n\n\nplot(modelrandom1)","metadata":{"papermill":{"duration":0.364009,"end_time":"2022-05-03T14:23:15.310262","exception":false,"start_time":"2022-05-03T14:23:14.946253","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Predictions\n\n# Let us test our model by predicting on our testing dataset.\n# test$predicted.MEDV <- predict(model, test)\n# head(test)\n\npred <- predict(modelrandom1, type = \"response\", newdata = test)\nhead(pred)\n\nsummary(pred)","metadata":{"papermill":{"duration":0.195697,"end_time":"2022-05-03T14:23:15.673278","exception":false,"start_time":"2022-05-03T14:23:15.477581","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Assessing our Model\n# error <- test$MEDV - test$predicted.MEDV\n# rmse <- sqrt(mean(error)^2)\n# rmse\n\n\n# Check the RMSE score of train dataset\nrmse(train$MEDV, predict(modelrandom1, train))\n","metadata":{"papermill":{"duration":0.295424,"end_time":"2022-05-03T14:23:16.128875","exception":false,"start_time":"2022-05-03T14:23:15.833451","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Add the MEDV variable to the test dataset\ntest$MEDV <- predict(modelrandom1, type = \"response\", newdata = test)\nhead(test)","metadata":{"papermill":{"duration":0.205586,"end_time":"2022-05-03T14:23:16.491908","exception":false,"start_time":"2022-05-03T14:23:16.286322","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plot the predicted and test$MEDV\nplot(pred ~ test$MEDV)","metadata":{"papermill":{"duration":0.245196,"end_time":"2022-05-03T14:23:16.89618","exception":false,"start_time":"2022-05-03T14:23:16.650984","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Create the prescribed format for submission on Kaggle\n\noutput.df <- test %>%\n  select(ID, MEDV)\noutput.df","metadata":{"papermill":{"duration":0.230936,"end_time":"2022-05-03T14:23:17.297963","exception":false,"start_time":"2022-05-03T14:23:17.067027","status":"completed"},"tags":[],"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# save the file\n\nsubmit <- read.csv(\"/kaggle/input/house-price-prediction-of-indore-3gb11/IndoreHP_Sample.csv\")\n\nwrite.csv(submit, 'submission.csv', row.names = FALSE)","metadata":{"papermill":{"duration":0.197955,"end_time":"2022-05-03T14:23:17.657426","exception":false,"start_time":"2022-05-03T14:23:17.459471","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2022-05-03T19:23:07.917854Z","iopub.execute_input":"2022-05-03T19:23:07.919374Z","iopub.status.idle":"2022-05-03T19:23:07.937081Z"},"trusted":true},"execution_count":null,"outputs":[]}]}