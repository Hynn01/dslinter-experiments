{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Brief Introduction\n\nThis analysis is for the Google Data Analytics Certificate Capstone Project. It was inspired by Julen Aranguren's case study.\n\nThe case study will be based on the Divvy dataset. \n\nThe goal of this script is to combine downloaded Divvy data into a single dataframe, then perform basic analysis to answer the essential question: \"How do members and casual riders use Divvy bikes differently?\"","metadata":{}},{"cell_type":"markdown","source":"# Project Scenario\n\nIn the scenario, I am a data analyst for the marketing analyst team of Cyclistic, a Chicago-based bike share firm. The director of marketing believes that increasing the number of yearly subscriptions is critical to the company's future success. As a result, my team is interested in seeing how casual riders and annual members use Cyclistic bikes.","metadata":{}},{"cell_type":"markdown","source":"# Business Task Statement:\n\nThe director of marketing at the bike sharing company, cyclistic would like to how the different types of bike users (i.e annual members and casual riders) use cyclistic bikes differently.  The casual riders being users who pay for each ride and the annual members being users who pay a yearly subscription for the bike service.","metadata":{}},{"cell_type":"markdown","source":"# PHASE 1: ASK\n\n* What problem am I attempting to solve?\n\n* How can my insights drive business decisions?\n\n**Key Objectives:**\n\n**1.\tIdentify the business task:**\n\nThe marketing director would like to find a way to improve the earnings of the company. The director understands that there would need to a comprehensive analysis that will show how the annual customers and casual customers differ. By providing insights on this action, the marketing team will be able to create a focused and successful marketing message to the casual customers to convince them to upgrade to the annual subscription plan.\n\n**2.\tConsider key stakeholders:**\n\n•\tDirector of Marketing – Lily Moreno (Primary Stakeholder)\n\n•\tCyclistic Marketing Analytics Team (Primary Stakeholder)\n\n•\tCyclistic Executive Team (Secondary Stakeholder)\n\n\n**3.\tThe business task:**\n\nPerform an analysis with the use of historical trips dataset from 2021_04 to 2022_03 (12 months) to identify how both bike users (casual riders and annual members) use bikes differently and discover a trend or pattern.\n\n\n","metadata":{}},{"cell_type":"markdown","source":"# PHASE 2: PREPARE\n\nThe dataset used for this project was provided by the bike sharing company. It is a vast dataset that begins from 2013 up until present 2022. In this phase, the specific dataset to be used will gotten.\n\n**Guiding Questions:**\n\n**1.\tWhere is the dataset located?**\n\nThe dataset is located on the Kaggle platform.\n\n**2.\tHow is the dataset arranged and organized?**\n\nThe dataset for arranged in the form of zip files and the different years differ in how they are organized. Some years are organized either quarterly by month or just plainly monthly.\n\n**3.\tAre there issues with bias or credibility in this data? Does your data ROCCC?**\n\nBias really is not a problem with this dataset because the data was gotten directly from the bike sharing company. The population of the dataset is the company’s own clients, that is its different bike riders. Finally, yes, my data ROCCC because it is Reliable, Original, Comprehensive, Current and Cited.\n\n**4.\tHow are you addressing licensing, privacy, security, and accessibility?**\n\nFor licensing, the bike sharing company seems to have their own legal license over the dataset. For the privacy and security, no personal information of its riders was given in the dataset. While for accessibility, the company has made the dataset accessible to the public for use.\n\n**5.\tHow did you verify the data’s integrity?**\n\nFor this dataset, I ensured to check the dataset for accuracy, completeness, consistency, and trustworthiness of the data throughout its lifecycle and by doing this, it shows that the dataset has consistent columns, and each column has the essential type of data required.\n\n**6.\tHow does it help you answer your question?**\n\nThe dataset might aid in providing some key insights that will help with my analysis about the riders and their riding preference which will help stakeholders perform data driven decisions with the insights.\n\n7.\tAre there any problems with the data?\nI personally think that the data could have been incorporated some more information about the users such as age grade in other for me to be able to see if there is a pattern or trend with the age grade and the selection of the bike riding options.\n","metadata":{}},{"cell_type":"markdown","source":"# PHASE 3: PROCESS\n\nThis phase will prepare the dataset for analysis and ensure that data has been compiled, filtered, sorted, and cleaned appropriately.\n\n**Guiding Questions:**\n\n**1.\tWhat tools are you choosing and why?**\n\n**•\tR:** Using this tool for the sorting, filtering, compilation and finally analysis.\n\n**•\tTableau:** Using this tool for the data viz.\n\n**•\tKaggle:** Dataset Database.\n\n**2.\tHave you ensured your data’s integrity?**\n\nYes, I have ensured my data’s integrity.\n","metadata":{}},{"cell_type":"markdown","source":"**Installation of Packages and Loading of the Different Data sets**","metadata":{}},{"cell_type":"code","source":"#step 1: Install Packages\n#install tidyverse and sqldf packages\n#load each of the package\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\nlibrary(lubridate)\ninstall.packages(\"sqldf\")\nlibrary(sqldf)\ninstall.packages(\"geosphere\")\nlibrary(\"geosphere\")\n\n\n#step 2: Uploading 12 months worth of dataset\n#create a variable for each dataset and load each data set into its respective variable\ntripdata_2021_04 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202104-divvy-tripdata.csv\")\ntripdata_2021_05 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202105-divvy-tripdata.csv\")\ntripdata_2021_06 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202106-divvy-tripdata.csv\")\ntripdata_2021_07 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202107-divvy-tripdata.csv\")\ntripdata_2021_08 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202108-divvy-tripdata.csv\")\ntripdata_2021_09 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202109-divvy-tripdata.csv\")\ntripdata_2021_10 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202110-divvy-tripdata.csv\")\ntripdata_2021_11 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202111-divvy-tripdata.csv\")\ntripdata_2021_12 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202112-divvy-tripdata.csv\")\ntripdata_2022_01 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202201-divvy-tripdata.csv\")\ntripdata_2022_02 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202202-divvy-tripdata.csv\")\ntripdata_2022_03 <- read.csv(\"../input/cyclistic-divvy-apr2021-mar2022/202203-divvy-tripdata.csv\")\n\n#step 3: Inspect the uploaded data sets\ncolnames(tripdata_2021_04)\ncolnames(tripdata_2021_05)\ncolnames(tripdata_2021_06)\ncolnames(tripdata_2021_07)\ncolnames(tripdata_2021_08)\ncolnames(tripdata_2021_09)\ncolnames(tripdata_2021_10)\ncolnames(tripdata_2021_11)\ncolnames(tripdata_2021_12)\ncolnames(tripdata_2022_01)\ncolnames(tripdata_2022_02)\ncolnames(tripdata_2022_03)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:22:25.068286Z","iopub.execute_input":"2022-05-07T20:22:25.073826Z","iopub.status.idle":"2022-05-07T20:27:16.453098Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Data Cleaning Process**","metadata":{}},{"cell_type":"code","source":"#Step 1: Separate each month's data set quarterly\n\n#Quarter 2, 2021\ntripdata_2021_04_05 <- full_join(tripdata_2021_04,tripdata_2021_05)\ntripdata_q2_2021 <- full_join(tripdata_2021_04_05,tripdata_2021_06)\nas_tibble(tripdata_q2_2021)\n\n#Quarter 3, 2021\ntripdata_2021_07_08 <- full_join(tripdata_2021_07,tripdata_2021_08)\ntripdata_q3_2021 <- full_join(tripdata_2021_07_08,tripdata_2021_09)\nas_tibble(tripdata_q3_2021)\n\n#Quarter 4, 2021\ntripdata_2021_10_11 <- full_join(tripdata_2021_10,tripdata_2021_11)\ntripdata_q4_2021 <- full_join(tripdata_2021_10_11,tripdata_2021_12)\nas_tibble(tripdata_q4_2021)\n\n#Quarter 1, 2022\ntripdata_2022_01_02 <- full_join(tripdata_2022_01,tripdata_2022_02)\ntripdata_q1_2022 <- full_join(tripdata_2022_01_02,tripdata_2022_03)\nas_tibble(tripdata_q1_2022)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:27:16.456314Z","iopub.execute_input":"2022-05-07T20:27:16.519117Z","iopub.status.idle":"2022-05-07T20:27:56.015245Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 2: Inspect the uploaded data sets\ncolnames(tripdata_q2_2021)\ncolnames(tripdata_q3_2021)\ncolnames(tripdata_q4_2021)\ncolnames(tripdata_q1_2022)\nas_tibble(tripdata_q2_2021)\nas_tibble(tripdata_q3_2021)\nas_tibble(tripdata_q4_2021)\nas_tibble(tripdata_q1_2022)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:27:56.018242Z","iopub.execute_input":"2022-05-07T20:27:56.019858Z","iopub.status.idle":"2022-05-07T20:27:56.652074Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 3: Data Type Conversion\ntripdata_q2_2021 <- mutate(tripdata_q2_2021, ride_id = as.character(ride_id),rideable_type = as.character(rideable_type))\ntripdata_q3_2021 <- mutate(tripdata_q3_2021, ride_id = as.character(ride_id),rideable_type = as.character(rideable_type))\ntripdata_q4_2021 <- mutate(tripdata_q4_2021, ride_id = as.character(ride_id),rideable_type = as.character(rideable_type))\ntripdata_q1_2022 <- mutate(tripdata_q1_2022, ride_id = as.character(ride_id),rideable_type = as.character(rideable_type))","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:27:56.655101Z","iopub.execute_input":"2022-05-07T20:27:56.656816Z","iopub.status.idle":"2022-05-07T20:27:56.697353Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 4: Combine individual quarter's data frames into one big data frame\ntotal_cyclistic_dataset <- bind_rows(tripdata_q2_2021, tripdata_q3_2021, tripdata_q4_2021, tripdata_q1_2022)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:27:56.700181Z","iopub.execute_input":"2022-05-07T20:27:56.701792Z","iopub.status.idle":"2022-05-07T20:27:58.30585Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 5: Inspect the combined data frames\nhead(total_cyclistic_dataset)\nas_tibble(total_cyclistic_dataset)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:27:58.308789Z","iopub.execute_input":"2022-05-07T20:27:58.310482Z","iopub.status.idle":"2022-05-07T20:27:58.517823Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 6: Add columns that list the date, month, day and year of each ride\n#This will allow us to aggregate ride data for each month, day, or year before completing these operations we could only aggregate at the ride level\ntotal_cyclistic_dataset$date <- as.Date(total_cyclistic_dataset$started_at)#The default format is yyyy-mm-dd\ntotal_cyclistic_dataset$month <- format(as.Date(total_cyclistic_dataset$date), \"%m\")\ntotal_cyclistic_dataset$day <- format(as.Date(total_cyclistic_dataset$date), \"%d\")\ntotal_cyclistic_dataset$year <- format(as.Date(total_cyclistic_dataset$date), \"%y\")\ntotal_cyclistic_dataset$day_of_week <- format(as.Date(total_cyclistic_dataset$date), \"%A\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:27:58.520657Z","iopub.execute_input":"2022-05-07T20:27:58.522364Z","iopub.status.idle":"2022-05-07T20:28:28.806814Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 7: Add the column of ride_length\n#In the overall data frame, there needs to be a column that contains the ride duration that will be determined by the difference between the started-at and the ended_at\ntotal_cyclistic_dataset$ride_length <- difftime(total_cyclistic_dataset$ended_at,total_cyclistic_dataset$started_at)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:28:28.811244Z","iopub.execute_input":"2022-05-07T20:28:28.812985Z","iopub.status.idle":"2022-05-07T20:29:19.380635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 8: Convert \"ride_length\" from Factor to numeric s we can run calculations on the data\n#In the overall data frame, ride length needs to be converted into a numeric data type\n#Convert to numeric data\ntotal_cyclistic_dataset$ride_length <- as.numeric(as.character(total_cyclistic_dataset$ride_length))\nis.numeric(total_cyclistic_dataset$ride_length)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:29:19.384316Z","iopub.execute_input":"2022-05-07T20:29:19.386134Z","iopub.status.idle":"2022-05-07T20:29:27.753936Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 9: Verify the conversion by inspecting the data frame\nhead(total_cyclistic_dataset)\nas_tibble(total_cyclistic_dataset)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:29:27.756687Z","iopub.execute_input":"2022-05-07T20:29:27.758195Z","iopub.status.idle":"2022-05-07T20:29:27.987897Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 10: Get summary of dataset\nsummary(total_cyclistic_dataset)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:29:27.990722Z","iopub.execute_input":"2022-05-07T20:29:27.992294Z","iopub.status.idle":"2022-05-07T20:29:30.997652Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#From the above summary statistics, we notice that the minimum aspect on the ride_length column is -3482 secs. This is not correct due to the fact that ride_length can never be a negative figure.\n\n#Step 11: Inspecting Individual Columns\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE ride_id IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE rideable_type IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE started_at IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE ended_at IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE start_station_name IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE start_station_id IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE end_station_name IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE end_station_id IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE start_lat IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE start_lng IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE end_lat IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE end_lng IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE member_casual IS NULL\")\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset\n      WHERE  ride_length  IS NULL\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:29:31.000579Z","iopub.execute_input":"2022-05-07T20:29:31.002367Z","iopub.status.idle":"2022-05-07T20:34:11.426146Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 12: Inspecting Individual Columns\n#Use the Unique Operator to get the unique variables in each column of the data set\nunique(total_cyclistic_dataset$member_casual)#Noticed that there are only 2 types of \"member_casual\"\nunique(total_cyclistic_dataset$rideable_type)#Noticed that there are only 3 types of \"rideable_types\"\nunique(total_cyclistic_dataset$start_station_name) #Noticed that there are some empty fields in this column\nunique(total_cyclistic_dataset$end_station_name)#Noticed that there are some empty fields in this column","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:34:11.430361Z","iopub.execute_input":"2022-05-07T20:34:11.432245Z","iopub.status.idle":"2022-05-07T20:34:12.834027Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 13: Drop all NA\ntotal_cyclistic_dataset_clean <- drop_na(total_cyclistic_dataset)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:34:12.836829Z","iopub.execute_input":"2022-05-07T20:34:12.838351Z","iopub.status.idle":"2022-05-07T20:34:19.537277Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 14: Inspecting Individual Columns\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset_clean\n      WHERE ride_id IS NULL\")\n\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset_clean\n      WHERE started_at IS NULL\")\n\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset_clean\n      WHERE ended_at IS NULL\")\n\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset_clean\n      WHERE rideable_type IS NULL\")\n\nsqldf(\"SELECT * \n      FROM total_cyclistic_dataset_clean\n      WHERE start_station_name IS NULL\")\n\nsqldf(\"SELECT start_station_name\n      FROM total_cyclistic_dataset_clean\n      WHERE start_station_id IS NULL\")\n\nsqldf(\"SELECT DISTINCT start_station_name\n      FROM total_cyclistic_dataset_clean\")\n\nsqldf(\"SELECT COUNT(*)\n      FROM total_cyclistic_dataset_clean\n      WHERE ride_length < 0 \")\n\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset_clean\n      WHERE end_station_name IS NULL\")\n\nsqldf(\"SELECT *\n      FROM total_cyclistic_dataset_clean\n      WHERE end_station_id IS NULL\")\n\nsqldf(\"SELECT DISTINCT member_casual\n      FROM total_cyclistic_dataset_clean\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:34:19.540162Z","iopub.execute_input":"2022-05-07T20:34:19.541747Z","iopub.status.idle":"2022-05-07T20:38:04.221906Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 15: Remove bad data\ntotal_cyclistic_dataset_clean <- total_cyclistic_dataset[!(total_cyclistic_dataset$ride_length<0),]","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:38:04.224709Z","iopub.execute_input":"2022-05-07T20:38:04.226334Z","iopub.status.idle":"2022-05-07T20:38:07.49075Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Taking a look at the data frame, it looks like the aggregation of user types can only be done on ride levels and in order to aggregate \n#the ride data for day, month and year, we need to create individual columns for these variables (date, month, year)\n\n#Step 16: Convert to date type\ntotal_cyclistic_dataset_clean$start_date = as.Date(total_cyclistic_dataset_clean$started_at)\ntotal_cyclistic_dataset_clean$end_date = as.Date(total_cyclistic_dataset_clean$ended_at)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:38:07.493433Z","iopub.execute_input":"2022-05-07T20:38:07.494952Z","iopub.status.idle":"2022-05-07T20:38:21.543824Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 17: Using the mutate function present in the lubridate package to change the existing data to suite the condition\ntotal_cyclistic_dataset_clean <- total_cyclistic_dataset %>%\n  mutate(date=as.Date(started_at),\n         month=month(started_at),\n         day=day(started_at),\n         year=year(started_at),\n         day_of_week=wday(started_at, label = TRUE))","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:38:21.546754Z","iopub.execute_input":"2022-05-07T20:38:21.548496Z","iopub.status.idle":"2022-05-07T20:40:05.704087Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 18: Inspecting the changes made\nhead(total_cyclistic_dataset_clean)\nunique(total_cyclistic_dataset$day_of_week)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:05.707481Z","iopub.execute_input":"2022-05-07T20:40:05.709318Z","iopub.status.idle":"2022-05-07T20:40:05.844899Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 19: Comparing the total number of the casual users to the annual members\ntable(total_cyclistic_dataset_clean$member_casual)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:05.847972Z","iopub.execute_input":"2022-05-07T20:40:05.849713Z","iopub.status.idle":"2022-05-07T20:40:06.153565Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 20: Comparing the total number of the  different types of riders\ntable(total_cyclistic_dataset$rideable_type)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:06.156588Z","iopub.execute_input":"2022-05-07T20:40:06.158261Z","iopub.status.idle":"2022-05-07T20:40:06.462622Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# PHASE 4: ANALYZE","metadata":{}},{"cell_type":"markdown","source":"**Analyzing the Cleaned Data**","metadata":{}},{"cell_type":"code","source":"#Step 1: First, we find the mean, median, min and max of the ride_length\nmean(total_cyclistic_dataset_clean$ride_length) #straight average (total ride length/rides)\nmedian(total_cyclistic_dataset_clean$ride_length)#midpoint number in the ascending array of ride lengths\nmax(total_cyclistic_dataset_clean$ride_length) #longest ride\nmin(total_cyclistic_dataset_clean$ride_length)#shortest ride","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:06.465865Z","iopub.execute_input":"2022-05-07T20:40:06.467729Z","iopub.status.idle":"2022-05-07T20:40:06.744173Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 2: Inspect the data\nsummary(total_cyclistic_dataset_clean$ride_length)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:06.748365Z","iopub.execute_input":"2022-05-07T20:40:06.750054Z","iopub.status.idle":"2022-05-07T20:40:07.149327Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 3:\n#Compare Annual Member Users and Casual Users\n#Aggregate() Function in R Splits the data into subsets, computes \n#summary statistics for each subsets and returns the result in a group by form. \n#Aggregate function in R is similar to group by in SQL. \n#Aggregate() function is useful in performing all the aggregate operations like sum,count,mean, minimum and Maximum.\n#aggregate: This computes summary statistics of data subsets\n#Splits the data into subsets, computes summary statistics for each, and returns the result in a convenient form.\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual, FUN = mean)#Note, the ~ is used to simply say that ride length depends on the member_casual\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual, FUN = median)\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual, FUN = max)\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual, FUN = min)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:07.15217Z","iopub.execute_input":"2022-05-07T20:40:07.153774Z","iopub.status.idle":"2022-05-07T20:40:20.963973Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 4: Compare Annual Member Users and Casual Users on the Basis of Days of the Week\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual + total_cyclistic_dataset_clean$day_of_week, FUN = mean)\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual + total_cyclistic_dataset_clean$day_of_week, FUN = median)\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual + total_cyclistic_dataset_clean$day_of_week, FUN = max)\naggregate(total_cyclistic_dataset_clean$ride_length ~ total_cyclistic_dataset_clean$member_casual + total_cyclistic_dataset_clean$day_of_week, FUN = min)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:20.966791Z","iopub.execute_input":"2022-05-07T20:40:20.968297Z","iopub.status.idle":"2022-05-07T20:40:37.85092Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 5: Fixing days of the week\ntotal_cyclistic_dataset_clean$day_of_week <- ordered(total_cyclistic_dataset_clean$day_of_week, levels=c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:37.853679Z","iopub.execute_input":"2022-05-07T20:40:37.855221Z","iopub.status.idle":"2022-05-07T20:40:39.182261Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 6: Analyzing ridership data by type and weekday\ntotal_cyclistic_dataset_clean_v1 <- total_cyclistic_dataset_clean %>%\n  mutate(day_of_week=wday(started_at, label = TRUE)) %>%\n  group_by(member_casual, day_of_week) %>%\n  summarise(number_of_rides=n(), average_duration=mean(ride_length)) %>%\n  arrange(member_casual, day_of_week)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:40:39.185244Z","iopub.execute_input":"2022-05-07T20:40:39.186849Z","iopub.status.idle":"2022-05-07T20:41:08.196149Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 7: Analyzing ridership data by type and month\ntotal_cyclistic_dataset_clean_v2 <- total_cyclistic_dataset_clean %>%\n  mutate(month=month(started_at, label = TRUE)) %>%\n  group_by(member_casual, month ) %>%\n  summarise(number_of_rides=n(), average_duration=mean(ride_length)) %>%\n  arrange(member_casual, month)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:41:08.200011Z","iopub.execute_input":"2022-05-07T20:41:08.202087Z","iopub.status.idle":"2022-05-07T20:41:36.079754Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 8: Inspect the new dataframes\nview(total_cyclistic_dataset_clean_v1)\nview(total_cyclistic_dataset_clean_v2)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:41:36.082823Z","iopub.execute_input":"2022-05-07T20:41:36.084545Z","iopub.status.idle":"2022-05-07T20:41:36.104164Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 9: Analyze the top 20 most visited station names for annual members\ntotal_cyclistic_dataset_am <- total_cyclistic_dataset_clean %>%\n  unite(\"visited_station\", start_station_name, end_station_name, )\ntotal_cyclistic_dataset_am <- total_cyclistic_dataset_am[!(total_cyclistic_dataset_am$visited_station == \"_\"),]","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:41:36.107888Z","iopub.execute_input":"2022-05-07T20:41:36.109667Z","iopub.status.idle":"2022-05-07T20:41:41.393004Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 10: Create a new data frame for annual members\n#Analyze the top 20 most visited station names for annual members\nannual_members <- sqldf(\"SELECT visited_station, COUNT(member_casual) AS number_of_annual_members\n                        FROM total_cyclistic_dataset_am\n                        WHERE member_casual = 'member'\n                        GROUP BY visited_station\n                        ORDER BY number_of_annual_members DESC\n                        LIMIT 20\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:41:41.397619Z","iopub.execute_input":"2022-05-07T20:41:41.399424Z","iopub.status.idle":"2022-05-07T20:42:02.328846Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 11:Inspect the annual members data frame\nView(annual_members)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:42:02.331789Z","iopub.execute_input":"2022-05-07T20:42:02.333404Z","iopub.status.idle":"2022-05-07T20:42:02.368253Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 12: #Create a new data frame for casual members\n#Analyze the top 20 most visited station names for casual members\ncasual_members <- sqldf(\"SELECT visited_station, COUNT(member_casual) AS number_of_casual_members\n                        FROM total_cyclistic_dataset_am\n                        WHERE member_casual = 'casual'\n                        GROUP BY visited_station\n                        ORDER BY number_of_casual_members DESC\n                        LIMIT 20\")","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:42:02.371232Z","iopub.execute_input":"2022-05-07T20:42:02.372889Z","iopub.status.idle":"2022-05-07T20:42:22.542921Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 13: Inspect the casual members dataframe\nView(casual_members)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:42:22.546407Z","iopub.execute_input":"2022-05-07T20:42:22.548882Z","iopub.status.idle":"2022-05-07T20:42:22.585944Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 14: Using the mutate function present in the lubridate package to change the existing data to suite the condition\ntotal_cyclistic_dataset_am <- total_cyclistic_dataset_clean %>%\n  mutate(date=as.Date(started_at),\n         month=month(started_at),\n         day=day(started_at),\n         year=year(started_at),\n         day_of_week=wday(started_at, label = TRUE))","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:42:22.589018Z","iopub.execute_input":"2022-05-07T20:42:22.590694Z","iopub.status.idle":"2022-05-07T20:44:06.960039Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Step 15: Inspecting the day of the week column for the data frame\n#view(total_cyclistic_dataset_am$day_of_week)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:44:06.962916Z","iopub.execute_input":"2022-05-07T20:44:06.964473Z","iopub.status.idle":"2022-05-07T20:44:06.976815Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# PHASE 5: SHARE","metadata":{}},{"cell_type":"markdown","source":"**Cyclistic Case Study: First Analysis Data Viz**\n\nHere, I was able to confirm the initial questions that prompted the analysis of this data set. As seen in the data viz below, they all confirm that the ratio of annual members to casual members is low. \n\n* **Analysis of the weekdays by average duration of rides by the usertypes:** In the first data viz, we can see a trend that the average duration of rides by the casual members is greatly higher than that of the annual members each day of the week with Sunday and Saturday being the higehest as expected.\n\n* **Analysis of the weekdays by number of rides by usertypes:** In the second data viz, we can see that the number of rides for the casual members is higher than that of the annual members on weekends. But the number of rides of the annual members on the weekdays is gher than that of the casual members. This therefore tells us that the more annual members take more rides during the weekdays because we can assume that majority of the annual members are working class individuals.\n\n* **Analysis of the months by average duration of rides by usertypes:** In the third data viz, we can see that on a monthly basis, the average duration of rides by the casual members is hgher than that of the annual members.\n\n* **Analysis of the months by number of rides by usertypes:** In the forth data viz, it shows that based on the data that the casual members take more rides in the months of June, July and August, with July being its peak. This is probably due to the fact that these 3 months are the official month of summer which indicates that a lot of the casual users are most likely individuals between the ages of 12-25.","metadata":{}},{"cell_type":"markdown","source":"<div class='tableauPlaceholder' id='viz1651933728645' style='position: relative'><noscript><a href='#'><img alt='Cyclistic Dashboard: Analysis ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyCompleteAnalysisDataViz&#47;CyclisticDashboardAnalysis&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='CyclisticCaseStudyCompleteAnalysisDataViz&#47;CyclisticDashboardAnalysis' /><param name='tabs' value='no' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyCompleteAnalysisDataViz&#47;CyclisticDashboardAnalysis&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-GB' /></object></div>                <script type='text/javascript'>                    var divElement = document.getElementById('viz1651933728645');                    var vizElement = divElement.getElementsByTagName('object')[0];                    if ( divElement.offsetWidth > 800 ) { vizElement.style.width='1366px';vizElement.style.height='795px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='1366px';vizElement.style.height='795px';} else { vizElement.style.width='100%';vizElement.style.height='1527px';}                     var scriptElement = document.createElement('script');                    scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                </script>","metadata":{}},{"cell_type":"markdown","source":"**Cyclistic Case Study: Second Analysis Data Viz**\n\n* **Analysis of the ride length to the rideable type, different membership types & the day of the week:** Here, I was able to confirm the initial questions that prompted the analysis of this data set. As seen in the data viz below, it further confirms that the casual members' ride length for the 3 different types of bike types surpasses that of the annual members' ride length for the 3 different types of bike types. The data viz also shows that the annual member category does not have people using the docked biked. This could be as a result of the fact that most, if not all the users in the annual member category are working class individuals who go to work on weekdays and would probably require to use either the clssic bike or the electric bike.","metadata":{}},{"cell_type":"markdown","source":"<div class='tableauPlaceholder' id='viz1651954783280' style='position: relative'><noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyCompleteAnalysisDataViz&#47;Analysisoftheridelengthtotherideabletypedifferentmembershiptypesthedayoftheweek&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='CyclisticCaseStudyCompleteAnalysisDataViz&#47;Analysisoftheridelengthtotherideabletypedifferentmembershiptypesthedayoftheweek' /><param name='tabs' value='yes' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Cy&#47;CyclisticCaseStudyCompleteAnalysisDataViz&#47;Analysisoftheridelengthtotherideabletypedifferentmembershiptypesthedayoftheweek&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-GB' /></object></div>                <script type='text/javascript'>                    var divElement = document.getElementById('viz1651954783280');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                </script>","metadata":{}},{"cell_type":"markdown","source":"# PHASE 6: ACT","metadata":{}},{"cell_type":"markdown","source":"**Findings of the Analysis**\n\nThe data shows the following based on my examination of the recent 12 months' dataset:\n\n* Casual riders account for 44.4 percent of all riders and take lengthier rides than members.\n\n* Annual riders account for 55.59 percent of all riders and take shorter rides compared to casual riders.\n\n* The average ride duration for a casual user in a week is approximately four times that of a member user.\n\n* On weekdays, almost 80% of members use the cyclistic bike sharing services (Mon to Fri)\n\n* The number of rides taken by both sorts of users increases over the summer months, but the difference is more pronounced among casuals, who outnumber members in the number of rides taken.\n\n* There is no common route among the top ten most travelled routes for both members and casual users. This implies that the routes traveled by members and casual users are vastly different.\n\n* While member rides average approximately 400k per day throughout the week, casual rides nearly quadruple on weekends, moving from a daily tally of less than 300k Monday through Thursday to an average of more than 500k on Saturday and Sunday (Friday marks the beggining of the change with a figure in-between weekdays and weekend).","metadata":{}},{"cell_type":"markdown","source":"**Recommendations**\n\nThe key points to consider in encouraging casual members to become annual members are:\n\n* From the analysis, it shows that the six-month period of May to October accounts for roughly 73 percent of the overall number of cyclists in a year. During this time of year, the marketing staff at cyclistic should launch promos in order to encourage casual members to become annual members.\n\n* Consider offering memberships with extended ride time limitations and/or weekend memberships as an option.\n\n* Conduct surveys to learn more about how casuals members behave during peak periods on weekdays.  Depending on the results, we may need to shift physical advertising to public transportation (train and bus terminals) and increase digital advertising between the hours of 7am and 10pm.\n\n* Increase the benefits of biking in the winter. Coupons and discounts may be distributed.","metadata":{}}]}