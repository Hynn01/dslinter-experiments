{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"packages <- c('tidyverse', 'dplyr', 'ggplot2', 'lubridate', 'readxl', 'here', 'skimr', 'janitor')\nsapply(packages, require, character.only=TRUE, quietly=TRUE)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T20:20:26.712141Z","iopub.execute_input":"2022-05-07T20:20:26.71344Z","iopub.status.idle":"2022-05-07T20:20:26.845806Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"### I have very big datasets, so in the follwing sections I will explain how I used R to check, clean, preapre and analyse \n### data of each file instead working on each file sepeartely I will show the work on \n### all_trips_1.csv file\n### all_trips_1.csv contains all the data we need to analyze and answer the question","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Loading Data\n\n#Twenty_one_april = read.csv(\"../input/cyclistic-bike-share-dataset/202104-divvy-tripdata.csv\")\n#Twenty_one_may = read.csv(\"../input/cyclistic-bike-share-dataset/202105-divvy-tripdata.csv\")\n#Twenty_one_august = read.csv(\"../input//cyclistic-bike-share-dataset/202108-divvy-tripdata.csv\")\n#Twenty_one_july = read.csv(\"../input/cyclistic-bike-share-dataset/202107-divvy-tripdata.csv\")\n#Twenty_one_june = read.csv(\"../input/cyclistic-bike-share-dataset/202106-divvy-tripdata.csv\")\n#Twenty_one_september = read.csv(\"../input/cyclistic-bike-share-dataset/202109-divvy-tripdata.csv\")\n#Twenty_one_october = read.csv(\"../input//cyclistic-bike-share-dataset/202110-divvy-tripdata.csv\")\n#Twenty_one_november = read.csv(\"../input//cyclistic-bike-share-dataset/202111-divvy-tripdata.csv\")\n#Twenty_one_december = read.csv(\"../input/cyclistic-bike-share-dataset//202112-divvy-tripdata.csv\")\n#Twenty_two_january = read.csv(\"../input//cyclistic-bike-share-dataset/202201-divvy-tripdata.csv\")\n#Twenty_two_february = read.csv(\"../input//cyclistic-bike-share-dataset/202202-divvy-tripdata.csv\")\n#Twenty_two_march = read.csv(\"../input//cyclistic-bike-share-dataset/202203-divvy-tripdata.csv\")\n#Twenty_two_march = read.excel(\"../input//cyclistic-bike-share-dataset/202203-divvy-tripdata.xlsx\")\n#head(Twenty_one_july, 5)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:00:07.491873Z","iopub.execute_input":"2022-05-07T21:00:07.493445Z","iopub.status.idle":"2022-05-07T21:00:07.512635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Checking data\n\n#after loading  dataset I have checked all the files by using following commands\n##colnames(twenty_one_april)\n\n##to check the consistency in their column names\n##also can use summary()\n\n##is there any inconsistency in their column names we can repair that by\n\n## twenty_one_april <- clean_names(twenty_one_april)\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"## Data processing \n\n#then I create new column\n#trip_duration_sec \n\n#Before finding the trip_duartion I convert the given format into consistent format\n#by using following \n\n#twenty_one_april$started_at <-strptime(twenty_one_april$started_at, format = \"%Y-%m-%d %H:%M:%OS\", tz = \"GMT\")\n#str(twenty_one_april$started_at)\n\n#twenty_one_april$ended_at <-strptime(twenty_one_april$ended_at, format = \"%Y-%m-%d %H:%M:%OS\", tz = \"GMT\")\n#str(twenty_one_april$ended_at)\n\n#trip_duration_2020_4 <- difftime(twenty_one_april$ended_at, twenty_one_april$started_at ,tz=\"GMT\",units=\"secs\")\n#twenty_one_april$trip_duration_sec <- trip_duration_2020_4\n#View(twenty_one_april)\n\n\n##I have repeated the above steps for all the data file\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"##### Coverting data and Combine into single file\n#Convert ride_id and rideable_type to character so that they can stack correctly\n\n#twenty_one_april <-  mutate(twenty_one_april, ride_id = as.character(ride_id)\n#                   ,rideable_type = as.character(rideable_type)) \n\n#typeof(twenty_one_april$rideable_type)\n#typeof(twenty_one_april$started_at)\n\n\n#all_trips_3 <- bind_rows(twenty_one_april, twenty_one_may, twenty_one_june) \n#tail(all_trips_3)\n#all_trips_6 <- bind_rows(twenty_one_july, twenty_one_agust, twenty_one_september)\n#tail(all_trips_6)\n#all_trips_9 <- bind_rows(twenty_one_october, twenty_one_november, twenty_one_december) \n#tail(all_trips_9)\n#all_trips_12 <- bind_rows(twenty_two_january, twenty_two_february, twenty_two_march) \n#tail(all_trips_12)\n#head(all_trips_12)\n\n#all_trips <- bind_rows(all_trips_3, all_trips_6, all_trips_9, all_trips_12)\n\n#inspecting the all_trips data file\n#View(all_trips)\n#str(all_trips)\n#colnames(all_trips)\n#names(all_trips)\n#nrow(all_trips)\n#dim(all_trips)\n#head(all_trips)\n#summary(all_trips)\n#tail(all_trips)\n\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Creating new column week_day and convert it into character\n#all_trips$week_day <- wday(all_trips$started_at, label=TRUE, abbr=FALSE)\n#all_trips$week_day <- as.character(all_trips$week_day)\n\n#convert the trip_duration from factor to numeric so we can run calculations on the data\n#is.factor(all_trips$trip_duration_sec)\n#all_trips$trip_duration_sec <- as.numeric(as.character(all_trips$trip_duration_sec))\n#is.numeric(all_trips$trip_duration_sec)\n\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#remove bad data\n#all_trips_1 <- all_trips[!(all_trips$start_station_name == \" \" | all_trips$trip_duration_sec<0),]\n\n#then write that data into new file\n#write.csv(all_trips_1,\"/Users/nj465/Desktop/R-use/all_trips_1.csv\", row.names = FALSE)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"all_trips_1 = read.csv(\"../input/cyclistic-bike-share-dataset//all_trips_1.csv\")\nhead(all_trips_1, 5)","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:37:07.300663Z","iopub.execute_input":"2022-05-07T21:37:07.305928Z","iopub.status.idle":"2022-05-07T21:39:22.752815Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"##Descriptive analysis\n#Ride duration\nmean_ride_duration <- mean(all_trips_1$trip_duration_sec, na.rm = TRUE)\nmedian_ride_duration <- median(all_trips_1$trip_duration_sec, na.rm = TRUE)  \nlongest_ride_duration <- max(all_trips_1$trip_duration_sec, na.rm = TRUE) \nshortest_ride_duartion <- min(all_trips_1$trip_duration_sec, na.rm = TRUE) ","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:41:03.212234Z","iopub.execute_input":"2022-05-07T21:41:03.213662Z","iopub.status.idle":"2022-05-07T21:41:04.547056Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"######Compare members and casual users\n\nmean_member_casual <- aggregate(all_trips_1$trip_duration_sec ~ all_trips_1$member_casual, FUN = mean)\nmedian_member_casual <- aggregate(all_trips_1$trip_duration_sec ~ all_trips_1$member_casual, FUN = median)\nmax_member_casual <- aggregate(all_trips_1$trip_duration_sec ~ all_trips_1$member_casual, FUN = max)\nmin_member_casual <- aggregate(all_trips_1$trip_duration_sec ~ all_trips_1$member_casual, FUN = min)\n\n#Total trip duration is higher for casual riders than the member riders\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:41:44.480014Z","iopub.execute_input":"2022-05-07T21:41:44.482478Z","iopub.status.idle":"2022-05-07T21:42:07.608272Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"######average ride time by each day for members vs casual users\n\n#ordering the days of the week and then aggregate them to find average ride length for each user types:\n\nall_trips_1$week_day <- ordered(all_trips_1$week_day, levels=c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))\n\navg_ride_day_user <- aggregate(all_trips_1$trip_duration_sec ~ all_trips_1$member_casual + all_trips_1$week_day, FUN = mean)\nView(avg_ride_day_user)\n\n#For each weekday trip duration is higher for casual riders than the member riders","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:43:59.797433Z","iopub.execute_input":"2022-05-07T21:43:59.798895Z","iopub.status.idle":"2022-05-07T21:44:08.579266Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"######Visualize number of types by riders type\nall_trips_1 %>% \n  mutate(weekday = wday(started_at, label = TRUE, abbr=FALSE)) %>% \n  group_by(member_casual, weekday) %>% \n  summarise(number_of_rides = n() \n            ,average_duration = mean(trip_duration_sec, na.rm = TRUE)) %>% \n  arrange(member_casual, weekday)  %>% \n  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +\n  geom_col(position = \"dodge\")\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:45:15.787311Z","iopub.execute_input":"2022-05-07T21:45:15.789399Z","iopub.status.idle":"2022-05-07T21:45:29.601335Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"######Visualize for average duration by riders type\n\nall_trips_1 %>% \n  mutate(weekday = wday(started_at, label = TRUE, abbr=FALSE)) %>% \n  group_by(member_casual, weekday) %>% \n  summarise(number_of_rides = n() \n            ,average_duration = mean(trip_duration_sec, na.rm = TRUE)) %>% \n  arrange(member_casual, weekday)  %>% \n  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +\n  geom_col(position = \"dodge\")\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:45:59.641557Z","iopub.execute_input":"2022-05-07T21:45:59.643634Z","iopub.status.idle":"2022-05-07T21:46:10.950255Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"####Share\n\n#From the plots it's appeared that casual riders are more active than\n#memeber riders although thier number of rides are lesser than member \n#riders during the weekdays. Again casual riders made more number of \n#rides and thier ride length is longer than member ones over the weekends. \n#We can share the findings through power point.","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:47:39.879348Z","iopub.execute_input":"2022-05-07T21:47:39.880752Z","iopub.status.idle":"2022-05-07T21:47:39.889341Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#####Act\n#In the following I am proposing three recommendations:\n\n#We can set a threshold for the average riding time, \n#if any casual riders cross that they will automatically become members \n\n#We can offer them half of membership price for one month\n\n#We can make two types membership: weekends and weekdays\n","metadata":{"execution":{"iopub.status.busy":"2022-05-07T21:47:37.62741Z","iopub.execute_input":"2022-05-07T21:47:37.628769Z","iopub.status.idle":"2022-05-07T21:47:37.637489Z"},"trusted":true},"execution_count":null,"outputs":[]}]}