{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"---\n**Title:** **<span style=\"color:#008000\"> Bellabeat Case study </span>**  \n**Author:** Boitrelle Kevin  \n**Date:** 2022-05-23  \n---\n\n\n ### <center><h2><span style=\"color:#008000\">Business task</center> \n  \n<center><h4>Bellabeat, a high-tech manufacturer of health-focused products for women asked \nme to perform an analysis on how non-Bellabeat customers use smart devices in \norder to identify trends and gain insights that can be used to make high-level \nrecommendations for one of the company's products and help them improve their \nbusiness strategy.</h4></center>\n<br/>\n\n###  <span style=\"color:#008000\">Step 1: ASK</span>  \n\n#### **1.1 Identify the business task**  \n\n   Analyze the habits of non-Bellabeat smart device users to find trends, and then apply these insights to one of Bellabeat's products so they can make informed decisions and align their marketing strategy. \n<br/>\n<br/>\n\n#### **1.2 Key stakeholders**    \n\n   The primary stakeholders are Urška Sršen, Bellabeat’s cofounder and \n   Chief Creative Officer, and Sando Mur, mathematician and Bellabeat’s \n   cofounder, and key member of the Bellabeat executive team.\n<br/>\n<br/>\n\n#### **1.3 Details about the company**  \n\nBellabeat is a successful business and high-tech manufacturer of products focused on women's health, with several smart wellness products that track physical activity, sleep and stress. Most of products can be connected to the Bellabeat app so users can access their data. \n\nThe company also offers a membership program for users. Membership gives users 24/7 access to fully personalized nutrition, activity, sleep, health and beauty, and mindfulness advice based on their lifestyle and goals.\n<br/>\n\nBellabeat products:\n\n* Bellabeat app: The Bellabeat app provides users with health data related to their activity, sleep, stress, menstrual cycle, and mindfulness habits. This data can help users better understand their current habits and make healthy decisions. The Bellabeat app connects to their line of smart wellness products.\n\n* Leaf: Bellabeat’s classic wellness tracker can be worn as a bracelet, necklace, or clip. The Leaf tracker connects to the Bellabeat app to track activity, sleep, and stress.\n\n* Time: This wellness watch combines the timeless look of a classic timepiece with smart technology to track user activity, sleep, and stress. The Time watch connects to the Bellabeat app to provide you with insights into your daily wellness.\n\n* Spring: This is a water bottle that tracks daily water intake using smart technology to ensure that you are appropriately hydrated throughout the day. The Spring bottle connects to the Bellabeat app to track your hydration levels.\n<br/>\n\n###  <span style=\"color:#008000\">Step 2: PREPARE</span>  \n\n#### **2.1 Description of the data sources**  \n   \nThis dataset have been generated by [FitBit Fitness](https://www.kaggle.com/datasets/arashnic/fitbit), and uploaded on Kaggle \n   by [MÖBIUS](https://www.kaggle.com/arashnic) in 2021.\n   <br/>\n   \n   They were generated by respondents to a distributed survey via Amazon Mechanical Turk between 03.12.2016 and 05.12.2016. Thirty eligible Fitbit users consented to the submission of personal tracker data, including minute-level output for physical activity, heart rate, and sleep monitoring. Individual. Variation between output represents use of different types of Fitbit trackers and individual tracking behaviors / preferences.\n   \nFor confidentiality reasons, an identification number has been assigned to all the participants.\n \n For more informations about the data source, click [here](https://zenodo.org/record/53894#.YMoUpnVKiP9)  \n<br/>\n\n#### **2.2 Selection of the dataset**  \n\nThe original dataset contains 17 csv files about daily activity and sleep data in days, hours and minutes for 33 users.\n\nFor this analysis, I chose to work only with the csv files \"dailyActivity_merged\", \"sleepDay_merged\", and \"hourlySteps_merged\".\n<br/> \n<br/>\n\n###  <span style=\"color:#008000\">Step 3: PROCESS</span>    \n\n#### **3.1 Loading packages**\n\nHere I will load the packages I will use for my analysis. \n\n* tidyverse\n* here\n* skimr\n* janitor\n* lubridate\n* viridis","metadata":{}},{"cell_type":"code","source":"library(tidyverse)\nlibrary(here)\nlibrary(skimr)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(viridis)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:57.239991Z","iopub.execute_input":"2022-05-08T12:43:57.242203Z","iopub.status.idle":"2022-05-08T12:43:58.728493Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.2 Loading the dataset and creation of the dataframes** \nHere we'll create three dataframes named \"daily_activity\", \"hourly_steps\" and \"sleep_per_day\". \n* dailyActivity_merged.csv\n* hourlySteps_merged.csv\n* sleepDay_merged.csv ","metadata":{}},{"cell_type":"code","source":"daily_activity <- read.csv(file= \"../input/fitbit/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv\")\nhourly_steps   <- read.csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv\")\nsleep_per_day  <- read.csv(file= \"../input/fitbit/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv\")","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:58.731996Z","iopub.execute_input":"2022-05-08T12:43:58.776143Z","iopub.status.idle":"2022-05-08T12:43:58.891356Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.3 Overview of the dataset** ","metadata":{}},{"cell_type":"code","source":"summary(daily_activity)\nsummary(sleep_per_day)\nsummary(hourly_steps)\nhead(daily_activity)\nstr(daily_activity)\nhead(sleep_per_day)\nstr(sleep_per_day)\nhead(hourly_steps)\nstr(hourly_steps)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:58.894924Z","iopub.execute_input":"2022-05-08T12:43:58.896928Z","iopub.status.idle":"2022-05-08T12:43:59.05228Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### **3.4 Cleaning and formatting**\n\n* First, I want to clean up the dataset. I'll make sure the attribute names make sense, that there are no duplicates or errors, and that the date type and format are correct.","metadata":{}},{"cell_type":"markdown","source":"#### **3.4.1 Attributes modification**  \n\n* I decide to apply an appropriate name to the attributes of each dataframe.","metadata":{}},{"cell_type":"code","source":"daily_activity <- daily_activity %>% \n  rename(c(id= Id, date= ActivityDate, total_steps= TotalSteps,\n           total_distance= TotalDistance, tracker_distance= TrackerDistance, \n           logged_activities_distance= LoggedActivitiesDistance, \n           very_active_distance= VeryActiveDistance, moderately_active_distance= ModeratelyActiveDistance, lightly_active_distance= LightActiveDistance, \n           sedentary_active_distance= SedentaryActiveDistance, \n           very_active_minutes= VeryActiveMinutes, moderately_active_minutes= \n             FairlyActiveMinutes, lightly_active_minutes= LightlyActiveMinutes,\n           sedentary_minutes= SedentaryMinutes, calories= Calories))\n\nsleep_per_day <- sleep_per_day %>% \n  rename(c(id= Id, date= SleepDay, total_sleep_records= TotalSleepRecords, \n           total_minutes_asleep= TotalMinutesAsleep, total_time_in_bed= \n             TotalTimeInBed))\n\nhourly_steps <- hourly_steps %>% \n  rename(c(id= Id, date_time= ActivityHour, total_steps= StepTotal))","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.05544Z","iopub.execute_input":"2022-05-08T12:43:59.056811Z","iopub.status.idle":"2022-05-08T12:43:59.114652Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.2 Attribute verification**\n\n* I now want to verify that the naming has been applied correctly. ","metadata":{}},{"cell_type":"code","source":"colnames(daily_activity)\ncolnames(sleep_per_day)\ncolnames(hourly_steps)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.117585Z","iopub.execute_input":"2022-05-08T12:43:59.11882Z","iopub.status.idle":"2022-05-08T12:43:59.141834Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.3 Dates modification**  \n\n* Here I want to change the format of the date-time string of the sleep_per_day dataframe to date format, the date string of the daily_activity dataframe to date type, and the date-time string of the hourly_steps dataframe to date-time type.","metadata":{}},{"cell_type":"code","source":"sleep_per_day <- sleep_per_day %>% \n  mutate(date= as_date(date, format= \"%m/%d/%Y %I:%M:%S %p\"))\n\ndaily_activity <- daily_activity %>%\n  mutate(date= as_date(date, format= \"%m/%d/%Y\"))\n  \nhourly_steps <- hourly_steps %>% \n  mutate(date_time = as.POSIXct(date_time,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n\nhead(sleep_per_day)\nhead(daily_activity)\nhead(hourly_steps)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.144705Z","iopub.execute_input":"2022-05-08T12:43:59.145914Z","iopub.status.idle":"2022-05-08T12:43:59.230834Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.4 Dates verification**  \n\n* Now let's check that the changes made to the format and type of the date have been correctly applied.","metadata":{}},{"cell_type":"code","source":"head(sleep_per_day)\nstr(sleep_per_day)\nhead(daily_activity)\nstr(daily_activity)\nhead(hourly_steps)\nstr(hourly_steps)\n\nsummary(daily_activity)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.233721Z","iopub.execute_input":"2022-05-08T12:43:59.234915Z","iopub.status.idle":"2022-05-08T12:43:59.318321Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**After changing the date type, we were able to verify in the summary that the data was generated during a 31-day period (from 2016-04-12 to 2016-05-12).**","metadata":{}},{"cell_type":"markdown","source":"#### **3.4.5 Search for duplicates**  \n\n* I will now look for duplicates in the the dataframes to ensure the \naccuracy of my sample size.","metadata":{}},{"cell_type":"code","source":"sum(duplicated(sleep_per_day))\nsum(duplicated(daily_activity))\nsum(duplicated(hourly_steps))","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.321134Z","iopub.execute_input":"2022-05-08T12:43:59.322544Z","iopub.status.idle":"2022-05-08T12:43:59.530124Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.6 Duplicates overview**\n* Here I want to see which rows were duplicated.","metadata":{}},{"cell_type":"code","source":"sleep_per_day %>% \n  group_by(id, date) %>%\n     filter(n()>1)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.532965Z","iopub.execute_input":"2022-05-08T12:43:59.534203Z","iopub.status.idle":"2022-05-08T12:43:59.593384Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.7 Delete the duplicates**\n* Since I didn't find any duplicates in the daily_activity and hourly_steps dataframe, I only need to delete them from the sleep_per_day table.","metadata":{}},{"cell_type":"code","source":"sleep_per_day <- sleep_per_day %>% \n                 distinct()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.596276Z","iopub.execute_input":"2022-05-08T12:43:59.59747Z","iopub.status.idle":"2022-05-08T12:43:59.608249Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.8 Verification of duplicates removal**\n* I want to be absolutely sure that all duplicates have been removed.","metadata":{}},{"cell_type":"code","source":"sum(duplicated(sleep_per_day))","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.611123Z","iopub.execute_input":"2022-05-08T12:43:59.612377Z","iopub.status.idle":"2022-05-08T12:43:59.628564Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.9 Missing values control**\n* Now I want to check that there are no missing values in the dataframes.\nI'll use \"!complete.cases()\" to return only the observations that might be affected.","metadata":{}},{"cell_type":"code","source":"daily_activity %>% \n       filter(!complete.cases(daily_activity))\nsleep_per_day %>% \n       filter(!complete.cases(sleep_per_day))\nsleep_per_day %>% \n       filter(!complete.cases(sleep_per_day))","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.631311Z","iopub.execute_input":"2022-05-08T12:43:59.63254Z","iopub.status.idle":"2022-05-08T12:43:59.676564Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **3.4.10 Verification of the sample size**\n\n* How many unique participants are there in each dataset? It appears that there are more participants in the daily activity and hourly step data set than in the sleep data set.","metadata":{}},{"cell_type":"code","source":"n_unique(daily_activity$id)\nn_unique(sleep_per_day$id)\nn_unique(hourly_steps$id)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.67943Z","iopub.execute_input":"2022-05-08T12:43:59.680693Z","iopub.status.idle":"2022-05-08T12:43:59.703387Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* We can see here that there is a total number of **33** participants.\n\n* We can also see that **9** participants are missing in the \"sleep_per_day\" \ndata frame. This tells us that 9 participants, or **27%** of the total number of participants, were not\nconnected to a smart device while sleeping, making it impossible to collect data.\n\n* Even though the sample size is now less than the 30 recommended for this \nparticular data frame (sleep_per_day), I'm still going to keep it as I don't have any additional data \nsources for users during their sleep.\n\n(Clic [Here](https://www.investopedia.com/terms/c/central_limit_theorem.asp#:~:text=Key%20Takeaways-,The%20central%20limit%20theorem%20(CLT)%20states%20that%20the%20distribution%20of,for%20the%20CLT%20to%20hold.) to see recommendations for sample size.).\n<br/>\n<br/>\n<br/>\n\n### <span style=\"color:#008000\">Step 4: ANALYZE</span>  \n\n**My initial hypothesis is that the more active participants are, the more they use smart devices, as they will be more interested in tracking their physical progress. Let's see what the data reveals about this.**\n<br/>\n<br/>\n\n#### **4.1 Smart device use by participants during the 31-day period** \n* First, I want to know the total number of days participants were connected to a smart device \nin order to discover some trends during the activity and sleep periods.\n\n* I'll use the daily_activity and sleep_per_day dataframe to classify participants by the number \nof days they were connected and then I'll create two charts to make it clearer.","metadata":{}},{"cell_type":"code","source":"# Use of a smart device during active time for a period of 31 days\n\ndevice_day_use <- daily_activity %>%\n  select(id) %>% \n  group_by(id) %>% \n  mutate(number_of_days= n()) \n\ndevice_day_use <-device_day_use %>% \n    distinct()  \n\ndevice_day_use <- device_day_use%>% \n    group_by(number_of_days) %>% \n    summarise(number_of_users= n())\n\nView(device_day_use)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.706264Z","iopub.execute_input":"2022-05-08T12:43:59.707488Z","iopub.status.idle":"2022-05-08T12:43:59.746332Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**In this new dataframe, each observation indicates a number of days out of the total 31 days (number_of_days column), and the the corresponding number of participants (number_of_users column).** ","metadata":{}},{"cell_type":"code","source":"# Use of a smart device while sleeping for a period of 31 days\n\ndevice_sleep_use <- sleep_per_day %>%\n  select(id) %>% \n  group_by(id) %>% \n  mutate(number_of_days= n())\n\n\ndevice_sleep_use <-device_sleep_use %>%\n   distinct()  \n   \n\ndevice_sleep_use <- device_sleep_use%>% \n  group_by(number_of_days) %>% \n  summarise(number_of_users= n())\n\nView(device_sleep_use)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.749184Z","iopub.execute_input":"2022-05-08T12:43:59.750459Z","iopub.status.idle":"2022-05-08T12:43:59.788156Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Like in the previous one, each observation in this dataframe indicates a number of days out of the total 31 days (number_of_days column), and the the corresponding number of participants (number_of_users column).**","metadata":{}},{"cell_type":"code","source":"# Creation of the bar chart of daily usage\n\nggplot(device_day_use, mapping = aes(x= number_of_days, y= number_of_users,fill= number_of_users))+\n    geom_col()+\n    labs(title= \"Smart device use during active time\", subtitle= \"33 users included for a period of 31 days\", x= \"Number of days\", y= \"Number of users\")+\n    annotate(\"text\", x= 30.3, y= 21.8, label= \"21 users\", fontface= \"bold\", color= \"black\", size= 5)+\n    annotate(\"text\", x= 30, y= 3.8, label= \"3\", fontface= \"bold\", color= \"black\", size= 3.5)+\n    annotate(\"text\", x= 29, y= 2.8, label= \"2\", fontface= \"bold\", color= \"black\", size= 3.5)+\n    annotate(\"text\", x= 28, y= 1.8, label= \"1\", fontface= \"bold\", color= \"black\", size= 3.5)+\n    scale_fill_viridis_c()+\n    theme(legend.position=\"none\")+\n    theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:43:59.79097Z","iopub.execute_input":"2022-05-08T12:43:59.792203Z","iopub.status.idle":"2022-05-08T12:44:00.324481Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**In this bar chart, the y-axis represents the number of participants and the x-axis the number of days** \n<br/>\n\n* We can see in this bar chart that 21 participants were connected during their active time for the total of 31 days. ","metadata":{}},{"cell_type":"code","source":"# Creation of sleep bar chart\n\n  ggplot(device_sleep_use, mapping = aes(x= number_of_days, y= number_of_users, fill= number_of_users))+\n    geom_col()+\n    labs(title= \"Smart device use while sleeping\", subtitle= \"24 users included for a period of 31 days\", x= \"\", y= \"\")+\n    annotate(\"text\", label= \"3 users\", x= 30.3, y= 3.15, fontface= \"bold\", color=\"black\", size= 5)+\n    theme(legend.position = \"none\")+\n    scale_fill_viridis_c()+\n    theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:00.327806Z","iopub.execute_input":"2022-05-08T12:44:00.329233Z","iopub.status.idle":"2022-05-08T12:44:00.672954Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**In this bar chart, the y-axis represents the number of participants and the x-axis the number of days** \n<br/>\n\n* We can see here that only 3 participants were connected while sleeping for the total of 31 days. This says a lot about how connected users are to smart devices while they sleep. ","metadata":{}},{"cell_type":"markdown","source":"#### **4.1.1 Percentage of smart device usage by each participant for the 31-day period**\n* Now, to get a better idea of smart device usage for each participant, I'm going to create two dataframe that show the percentage of usage against the 31-day period. ","metadata":{}},{"cell_type":"code","source":"# Percentage of smart device usage during active time against the 31-day period\n\nuse_of_device_actif <- daily_activity %>% \n  group_by(id) %>% \n  count(id) %>% \n  rename(number_of_days= n) %>%\n  mutate(gap_double= number_of_days/31, gap_in_percent= scales::percent(gap_double)) %>%\n  arrange(desc(gap_double)) %>% \n  subset(select= -gap_double)\n \nView(use_of_device_actif)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:00.676361Z","iopub.execute_input":"2022-05-08T12:44:00.677589Z","iopub.status.idle":"2022-05-08T12:44:00.755336Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**In this new dataframe each observation represents a participant (id column), with the number of day (number_of_nights column), and the percentage it represent compared to the total 31 days (gap_in_percent column).**","metadata":{}},{"cell_type":"code","source":"# Percentage of smart device usage while sleeping against the 31-day period\n\nuse_of_device_asleep <- sleep_per_day %>% \n  group_by(id) %>% \n  count(id) %>% \n  rename(number_of_days= n) %>%\n  mutate(gap_double= number_of_days/31, gap_in_percent= scales::percent(gap_double)) %>%\n  arrange(desc(gap_double)) %>% \n  subset(select= -gap_double)\n\nView(use_of_device_asleep)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:00.758441Z","iopub.execute_input":"2022-05-08T12:44:00.759759Z","iopub.status.idle":"2022-05-08T12:44:00.821107Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **4.1.2 Distribution of steps in a day**\n* I now want to know what time of the day participants are most active in order to know exactly when smart devices are most likely to be used. To find this information, I'll use the hourly_steps table to create a bar chart that includes the average steps of participants and the different times of day.  ","metadata":{}},{"cell_type":"code","source":"# Creation of the dataframe\n\naverage_steps_hourly <- hourly_steps %>%\n    separate(date_time, into= c(\"date\", \"time\"), sep= \" \")%>%  \n    group_by(time) %>% \n    summarise(average_steps= mean(total_steps))\n\nView(average_steps_hourly)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:00.824127Z","iopub.execute_input":"2022-05-08T12:44:00.82541Z","iopub.status.idle":"2022-05-08T12:44:01.184798Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Each observation in this dataframe represents a time of day (time column), and the average steps assigned to that time (avg_steps column).**","metadata":{}},{"cell_type":"code","source":"# Creation of the bar chart\n\naverage_steps_hourly %>%\n  ggplot(mapping= aes(x= time, y= average_steps, fill= average_steps))+\n  geom_col()+\n  theme(axis.text.x= element_text(angle= 90)) +\n  labs(title= \"Average step distribution in a day\", subtitle= \"Average number of steps based on 33 users\" ,x= \"Hours of the day\", y= \" \")+\n  annotate(\"text\", label= \"599 steps\", x= \"18:00:00\", y= 625, fontface= \"bold\", size=5)+\n  scale_fill_viridis_c()+\n  theme(legend.position = \"none\")","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:01.187832Z","iopub.execute_input":"2022-05-08T12:44:01.189087Z","iopub.status.idle":"2022-05-08T12:44:01.465756Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* In this bar chart, we can clearly see that participants are most active during the day between 6 am. and 10 pm, with a maximum number of steps at 6 pm.","metadata":{}},{"cell_type":"markdown","source":"#### **4.2 Research of trends in the data**  \n\nNow I want to see if I can find any correlations between participants's daily steps, the amount of sleep per night and the calories they burn daily. Since my primary hypothesis was that more active participants might use smart devices more than others, then I will know if I need to do more research on user sleep data.","metadata":{}},{"cell_type":"markdown","source":"#### **4.2.1 Merging tables**  \n\n* In order to compare the amount of steps participants take each day with the amount of \ntime they sleep, I need to merge the daily_activity dataframe with \nthe sleep_per_night dataframe. \n<br/>\n<br/>\n\n<div class=\"alert alert-info\">\n<strong>Info!</strong> As a reminder, the sleep_per_day dataframe contains only 24 participants. For this \nreason, after merging the 2 dataframe, only 24 users will be included.","metadata":{}},{"cell_type":"code","source":"# Merge of the two tables\n\ndaily_activity_sleep <- \n  merge(daily_activity, sleep_per_day, by= c(\"id\", \"date\"))\n\nhead(daily_activity_sleep)\nstr(daily_activity_sleep)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:01.469133Z","iopub.execute_input":"2022-05-08T12:44:01.470362Z","iopub.status.idle":"2022-05-08T12:44:01.5205Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### **4.2.2 Plotting a few explorations**\n* I will create three scatter plots in which I will include all participants on different days based on the total time they sleep, their total number of steps per day, and the calories they burn to see if I can find any correlation between the 3.","metadata":{}},{"cell_type":"code","source":"# Creation of the \"Total minutes asleep vs Total steps\" scatter plots\n\nggplot(daily_activity_sleep, mapping = aes(x= total_minutes_asleep, y=total_steps ))+\n  geom_point(color= \"#006400\")+\n  geom_smooth(color = \"#FF8C00\")+\n  labs(title = \"Total minutes asleep vs Total steps\", subtitle = \"24 users included for a period of 31 days\", x= \"Total minutes asleep\", y= \"Total steps\")+\n  annotate(x = 220, y = 21300,label= paste(\"Correlation-coeff = \", round(cor(daily_activity_sleep$total_minutes_asleep, daily_activity_sleep$total_steps), 2)), geom= \"text\", size= 5, fontface= \"bold\")+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:01.523449Z","iopub.execute_input":"2022-05-08T12:44:01.571716Z","iopub.status.idle":"2022-05-08T12:44:02.961683Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* In this first scatter plot, the higher a point is, the more steps there are. The further a point is plotted to the right \nthe longer the time of sleep. \n\n**We can see in this scatter plots that the correlation coefficient is -0.19. This means that there is a negative and almost non-existent correlation between the two variables.**\n<br/>\n<br/>\n\n<div class=\"alert alert-info\">\n<strong>Info!</strong> As a reminder, a correlation coefficient is the measure of  straight and direction \nof a linear relationship between 2 variables. In other words, the closer the number \nis to 1, the more positively correlated they are, meaning that when one increases, \nso does the other. The closer the number is to -1, the more negatively correlated \nthey are, meaning that when one variable increases, the other decreases. And the \ncloser this number is to 0, the more they are not correlated at all, which is what \nwe just saw in the previous scatter plot.\n</div>","metadata":{}},{"cell_type":"code","source":"# Creation of \"Total minutes asleep vs Calories\" scatter plots\n\nggplot(daily_activity_sleep, mapping = aes(x= total_minutes_asleep, y= calories))+\n  geom_point(color= \"#006400\")+\n  geom_smooth(color = \"#FF8C00\")+\n  labs(title = \"Total minutes asleep vs Calories\", , subtitle = \"24 users included for a period of 31 days\", x= \"Total minutes asleep\", y= \"Calories\")+\n  annotate(x = 200, y = 4700,label= paste(\"Correlation-coeff = \", round(cor(daily_activity_sleep$total_minutes_asleep, daily_activity_sleep$calories), 2)), geom= \"text\", size= 5, fontface= \"bold\")+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:02.964733Z","iopub.execute_input":"2022-05-08T12:44:02.966569Z","iopub.status.idle":"2022-05-08T12:44:03.253116Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* In this scatter plot, the higher a point is, the more calories are burned. The further a point is plotted to the right the longer the time of sleep.\n<br/>\n\n**We can see here that the correlation coefficient -0.03. This means that there is a negative and almost non-existent correlation between these variables.**\n<br/>\n\n**Therefore, we can already conclude that there is no correlation between the number of daily steps and the users' sleep time, or between the users' sleep time and the calories they burn daily.**","metadata":{}},{"cell_type":"code","source":"# Creation of the \"total steps vs calories\" scatter plot\n\n      ggplot(daily_activity, mapping= aes(x = total_steps, y= calories))+\n      geom_point(color= \"#006400\")+\n      geom_smooth(color= \"#FF8C00\")+\n  labs(title = \"Total steps vs Calories\",subtitle= \"33 users for a period of 31 days\", x= \"Total steps\", y= \"calories\")+\nannotate(x = 6000, y = 4800,label= paste(\"Correlation coeff = \", round(cor(daily_activity$total_steps, daily_activity$calories), 2)), geom= \"text\", size= 5, fontface= \"bold\")+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:03.256212Z","iopub.execute_input":"2022-05-08T12:44:03.258084Z","iopub.status.idle":"2022-05-08T12:44:03.524712Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* As expected, we can see her that there is a positive correlation \n(correlation coefficient 0.59) between the number of steps and the amount of \ncalories burned.\n<br/>","metadata":{}},{"cell_type":"markdown","source":"#### **4.2.3 Plotting a few more explorations**\n\n* I now want to verify if as I think there is a strong correlation between very active minutes and very active distance.\n\n* My next step will be to examine the relationships between steps taken per day, active minutes, and sedentary minutes to determine if as I think there is a strong positive correlation between steps taken per day and active minutes, and a negative correlation between steps taken per day and sedentary minutes.","metadata":{}},{"cell_type":"code","source":"# Creation of the \"Very active distance vs Very active minutes\" scatter plot\n\nggplot(data=daily_activity, aes(x=very_active_distance, y=very_active_minutes))+ \n  geom_point(color= \"#006400\")+ \n  geom_smooth(color= \"#FF8C00\")+\n  annotate(x = 4, y = 280,label= paste(\"Correlation coeff = \", round(cor(daily_activity$very_active_distance, daily_activity$very_active_minutes), 2)), geom= \"text\", size= 5, fontface= \"bold\")+\n  labs(title = \"Very active distance vs Very active minutes\",subtitle= \"33 users for a period of 31 days\", x= \"Very active distance\", y= \"Very active minutes\")+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:03.527822Z","iopub.execute_input":"2022-05-08T12:44:03.529645Z","iopub.status.idle":"2022-05-08T12:44:03.778601Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* As expected, the two variables are significantly correlated with a correlation coefficient of 0.83. This means that the greater the active distance, the greater the number of active minutes. This makes perfect sense.","metadata":{}},{"cell_type":"code","source":"# Creation of the \"Total steps vs Very active minutes\" scatter plot\n\nggplot(data=daily_activity, aes(x=total_steps, y=very_active_minutes))+ \n  geom_point(color= \"#006400\")+ \n  geom_smooth(color= \"#FF8C00\")+\n  annotate(x = 5900, y = 750,label= paste(\"Correlation coeff = \", round(cor(daily_activity$total_steps, daily_activity$very_active_minutes), 2)), geom= \"text\", size= 5, fontface= \"bold\")+\n  labs(title = \"Total steps vs Very active minutes\",subtitle= \"33 users for a period of 31 days\", x= \"Total steps\", y= \"Very active minutes\")+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:03.781821Z","iopub.execute_input":"2022-05-08T12:44:03.783628Z","iopub.status.idle":"2022-05-08T12:44:04.039765Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* In this scatter plot, we can observe a strong positive correlation with a coefficient of 0.67, which means that the higher the number of daily steps, the higher the amount of minutes spent on active walking.","metadata":{}},{"cell_type":"code","source":"# Creation of the \"Total steps vs Sedentary minutes\" scatter plot\n\nggplot(daily_activity, aes(x=total_steps, y=sedentary_minutes))+ \n  geom_point(color= \"#006400\")+ \n  geom_smooth(color= \"#FF8C00\")+\nannotate(x = 6000, y = 2000,label= paste(\"Correlation coeff = \", round(cor(daily_activity$total_steps, daily_activity$sedentary_minutes), 2)), geom= \"text\", size= 5, fontface= \"bold\")+\n  labs(title = \"Total steps vs Sedentary minutes\",subtitle= \"33 users for a period of 31 days\", x= \"Total steps\", y= \"Sedentary active minutes\")+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:04.043077Z","iopub.execute_input":"2022-05-08T12:44:04.044775Z","iopub.status.idle":"2022-05-08T12:44:04.301155Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* We can see here that there is a negative correlation coefficient of -0.33, which means that the higher the number of steps, the lower the number of minutes spent on sedentary walking.\n<br/>\n<br/>\n\n**Now that I know a little more about how participants use smart devices during the day, when they sleep, and also that there is no correlation between their amount of daily steps and the time they spend sleeping, I want to know what kind of participants use smart devices the most. I will use the daily number of steps to track their activity during the day and categorize them in 5 categories.** \n<br/>\n\n([Here](https://www.medicinenet.com/how_many_steps_a_day_is_considered_active/article.htm) is the source I used to define the different categories)","metadata":{}},{"cell_type":"markdown","source":"#### **4.2.4 Creation of user categories**\nI intend to organize these categories as follows:  \n\n* Sedentary active: Less than 5,000 steps daily\n* Lightly active: About 5,000 to 7,499 steps daily\n* Moderatly active: About 7,500 to 9,999 steps daily\n* Active: More than 10,000 steps daily\n* Very active: More than 12,500 steps daily","metadata":{}},{"cell_type":"code","source":"user_profiles <-daily_activity %>%\n  group_by(id) %>% \n  summarise(average_total_steps= mean(total_steps), average_calories= mean(calories))\n\nuser_profiles2 <-daily_activity %>%\n  group_by(id) %>% \n  count(id) %>% \n  rename(number_of_users= n)\n\nuser_profiles <- \n  merge(user_profiles, user_profiles2, by= \"id\")\n\nuser_profiles2 <- user_profiles %>%\n  mutate(categories= case_when(\n    average_total_steps < 5000 ~ \"Sedentary active\"\n    ,average_total_steps >= 5000 & average_total_steps < 7500 ~ \"Lightly active\"\n    ,average_total_steps >= 7500 & average_total_steps < 10000 ~ \"Moderatly active\"\n    ,average_total_steps >= 10000 & average_total_steps < 12500 ~ \"Active\"\n    ,average_total_steps >= 12500 ~ \"Very active\")) \n\nuser_profiles <- user_profiles2 %>% \n    group_by(categories) %>% \n    count(categories) %>% \n    rename(number_of_users= n) %>% \n    mutate(category_double= number_of_users/33, percent_of_total_users= scales::percent(category_double))\n\n\nuser_profiles3 <- user_profiles2 %>%\n  group_by(categories) %>% \n  summarise(average_of_steps= mean(average_total_steps), average_calories= mean(average_calories), average_of_days= mean(number_of_users))  \n\n\nuser_profiles2 <- merge(user_profiles, user_profiles3, by= \"categories\")\n\nuser_profiles <- user_profiles2 %>%\n  subset(select= -category_double) %>% \n  arrange(desc(average_of_days))\n\nView(user_profiles)","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:04.304307Z","iopub.execute_input":"2022-05-08T12:44:04.306111Z","iopub.status.idle":"2022-05-08T12:44:04.421531Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"In this new dataframe, each observation represents: \n<br/>\n\n* The category (categories column) \n* The number of participants included in it (number_of_users column) \n* The percentage it represents compare to the total number of participants (percen_of_total_users column)\n* The average of steps (average_of_steps column)\n* The average calories (average_calories column)\n* And the average of days (average_of_days column)","metadata":{}},{"cell_type":"code","source":"# Creation of the bar chart \n\nuser_profiles$categories <- factor(user_profiles$categories,\n            levels= c(\"Very active\", \"Active\", \"Moderatly active\", \"Lightly active\", \"Sedentary active\"),\n            ordered = TRUE)\n\n\nuser_profiles %>% \n  ggplot(mapping = aes(x= categories, y= average_of_days, fill= average_calories))+\n  geom_col()+\n  geom_text(aes(label = percent_of_total_users), vjust = 2, color= \"white\", size=5.5)+\n  labs(title= \"Classification of user categories by stages\", subtitle = \"100% representing 33 users\", x= \"\", \n  y= \"Average of days\")+\n  theme(axis.text = element_text(face = \"bold\", size= 9))+\n  annotate(\"text\", x= \"Very active\", y= 26.9, label= \"of all\\nusers\", color= \"white\", size=5.5)+\n  theme_minimal()","metadata":{"execution":{"iopub.status.busy":"2022-05-08T12:44:04.425758Z","iopub.execute_input":"2022-05-08T12:44:04.427723Z","iopub.status.idle":"2022-05-08T12:44:04.825067Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* The data shows clearly that the more participants are active, the more they use smart devices.\n\n* We can also see that the most active participants represent only 21% of the total number of smart device participants.\n\n* It is interesting to see that moderately active participants (taking 7500 to 9999 steps per day) have a higher average calories burned than active participants (taking 10000 to 12500 steps per day).","metadata":{}},{"cell_type":"markdown","source":"### <span style=\"color:#008000\">**Conclusion**<span>\n\n**1-** Smart devices are used 28% more during active periods than during sleep periods.\n\n**2-** participants are more active and therefore more likely to use smart devices between 6am and 10pm.\n\n**2-** 79% of participants take fewer than 10,000 steps per day, although the remaining 21% of participants and the most active ones are those who use smart devices the most.\n\n\n* **Smart devices are mostly used during periods of activity or, to put it another way, during the day.** \n\n* **Users which are the less active represent the majority of smart device use and the most active the minority.**\n<br/>\n<br/>\n\n### <span style=\"color:#008000\">**Recommendations**<span>\n\n**Bellabeat wellness watch**\n\n* The marketing team should focus their advertising strategy on the most active people (those who burn more than 2,200 calories per day or take more than 10,000 steps), as they are the ones who use smart devices the most and might be interested in the product, but they are only a minority of the total number of users.\n\n* Because we found that participants don't use smart devices that much while sleeping, Bellabeat could add a vibrator to their wellness watch that would work as an alarm. This new feature could encourage people to wear the watch at night and attract a new type of customer.\n\n* The watch would have to be waterproof and shockproof to maximize the number of scenarios the user can wear it for.\n\nBellabeat could also implement an in-app rewards system that works with points that users could spend to customize the app or get discounts on the subscription program when their lifestyle score reaches a certain level. This could help attract new customers and retain existing ones.\n<br/>\n<br/>\n\n**Considering the small sample size and the age of the dataset, I would recommend performing a new analysis with a larger sample size and a more up-to-date dataset.**\n<br/>\n<br/>\n\nThank you for reading ","metadata":{}}]}