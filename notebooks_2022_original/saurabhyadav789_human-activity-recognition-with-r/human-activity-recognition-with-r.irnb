{"cells":[{"metadata":{},"cell_type":"markdown","source":"## Introduction"},{"metadata":{},"cell_type":"markdown","source":"## Exploratory Analysis"},{"metadata":{"_kg_hide-input":false,"trusted":true},"cell_type":"code","source":"library(readr)\nlibrary(dplyr)\nlibrary(glmnet)","execution_count":null,"outputs":[]},{"metadata":{},"cell_type":"markdown","source":"There are 2 csv files in the current version of the dataset:\n"},{"metadata":{"_kg_hide-input":false,"trusted":true},"cell_type":"code","source":"train_main <- read_csv(\"/kaggle/input/train.csv\")\ntest <- read_csv(\"/kaggle/input/test.csv\")\n\ntrain_main_labels <- train_main$Activity\ntest_labels <- test$Activity\ncat(paste0(\"Data loaded successfully. Training set has \", nrow(train_main), \" rows and \", ncol(train_main), \" columns.\"))\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"# Fix duplicate colnames\n\nnames(train_main) <- make.names(names(train_main), unique = TRUE)\nnames(test) <- names(train_main)","execution_count":null,"outputs":[]},{"metadata":{"_kg_hide-input":true,"trusted":true},"cell_type":"code","source":"set.seed(42)\nidx = sample(c(TRUE, FALSE), nrow(train_main), replace = TRUE, prob = c(0.8, 0.2))\n \ntrain = subset(train_main, idx)\ntrain_labels  = subset(train_main_labels, idx)\ncal = subset(train_main, !idx)\ncal_labels = subset(train_main_labels, !idx)\nx <- model.matrix(train_labels ~ ., train)[,-1]\nfit = glmnet(x, train_labels, family = \"multinomial\", type.multinomial = \"grouped\")\nplot(fit, xvar = \"lambda\", label = TRUE, type.coef = \"2norm\")\nplot(fit, xvar = \"dev\", label = TRUE)\nrequire(doMC)\nregisterDoMC(cores=4)\ncvfit=cv.glmnet(x, train_labels, family=\"multinomial\", type.measure=\"class\", type.multinomial = \"grouped\", nfolds = 5, parallel = TRUE)\nplot(cvfit)\nprint(cvfit$lambda.1se)\nprint(cvfit$lambda.min)\nbestlam = cvfit$lambda.1se\ntail(cvfit$lambda)\nnx = model.matrix(cal_labels ~., cal)[,-1]\ncal.pred <- predict(cvfit, s = bestlam, newx = nx, type = \"class\")\ntable(cal.pred, cal_labels)\nacc = sum(cal.pred == cal_labels) / length(cal.pred)","execution_count":null,"outputs":[]},{"metadata":{"_kg_hide-input":true,"trusted":true},"cell_type":"code","source":"# Accuracy\n\ncat(paste0(\"Our accuracy against our calibration dataset is: \", acc))\ntestx = model.matrix(test_labels ~., test)[,-1]\nhead(testx)\ntest.pred <- predict(cvfit, s = bestlam, newx = testx, type = \"class\")\nacc = sum(test.pred == test_labels) / length(test.pred)\ncat(paste0(\"Our accuracy against our test dataset is: \", acc))","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}