{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"library(tidyverse)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(tm)\nlibrary(wordcloud)\nlibrary(wordcloud2)\n\nsuggestions <- read_csv(\"../input/grounded-suggestions-via-discord-server/Suggestions.csv\")","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","execution":{"iopub.status.busy":"2022-04-27T04:50:17.269204Z","iopub.execute_input":"2022-04-27T04:50:17.27198Z","iopub.status.idle":"2022-04-27T04:50:17.383578Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I will try to extract the text from all of the suggestions and form it into a wordcloud!\n\nI will be following this tutorial: https://towardsdatascience.com/create-a-word-cloud-with-r-bde3e7422e8a","metadata":{}},{"cell_type":"code","source":"# Step 1: Creating a Corpus\n\ntext <- suggestions$SuggestionText\ndocs <- Corpus(VectorSource(text))","metadata":{"execution":{"iopub.status.busy":"2022-04-27T04:54:43.178846Z","iopub.execute_input":"2022-04-27T04:54:43.180832Z","iopub.status.idle":"2022-04-27T04:54:43.213568Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 2: Cleaning text data\n\ndocs <- docs %>%\n  tm_map(removeNumbers) %>%\n  tm_map(removePunctuation) %>%\n  tm_map(stripWhitespace)\ndocs <- tm_map(docs, content_transformer(tolower))\ndocs <- tm_map(docs, removeWords, stopwords(\"english\"))","metadata":{"execution":{"iopub.status.busy":"2022-04-27T04:54:44.536774Z","iopub.execute_input":"2022-04-27T04:54:44.538554Z","iopub.status.idle":"2022-04-27T04:54:44.619009Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 3: Create a document-term-matrix\n\ndtm <- TermDocumentMatrix(docs) \nmatrix <- as.matrix(dtm) \nwords <- sort(rowSums(matrix),decreasing=TRUE) \ndf <- data.frame(word = names(words),freq=words)","metadata":{"execution":{"iopub.status.busy":"2022-04-27T04:54:46.352393Z","iopub.execute_input":"2022-04-27T04:54:46.354349Z","iopub.status.idle":"2022-04-27T04:54:46.409214Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Step 4: Generate word cloud\n\nset.seed(420) # for reproducibility \nwordcloud(words = df$word, freq = df$freq, min.freq = 1,\n          max.words=200, random.order=FALSE, rot.per=0.35,\n          colors=brewer.pal(8, \"Dark2\"))","metadata":{"execution":{"iopub.status.busy":"2022-04-27T04:59:24.257057Z","iopub.execute_input":"2022-04-27T04:59:24.259339Z","iopub.status.idle":"2022-04-27T04:59:25.230169Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Making another word cloud\n\nwordcloud2(data=df, size=1.6, color='random-dark')","metadata":{"execution":{"iopub.status.busy":"2022-04-27T04:59:29.716588Z","iopub.execute_input":"2022-04-27T04:59:29.718813Z","iopub.status.idle":"2022-04-27T04:59:29.766935Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# And another\n\nwordcloud2(data=df, size = 0.7, shape = 'pentagon')","metadata":{"execution":{"iopub.status.busy":"2022-04-27T04:59:33.403147Z","iopub.execute_input":"2022-04-27T04:59:33.404976Z","iopub.status.idle":"2022-04-27T04:59:33.461504Z"},"trusted":true},"execution_count":null,"outputs":[]}]}